CREATE DATABASE  IF NOT EXISTS `dotnet_ubuntu` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `dotnet_ubuntu`;
-- MySQL dump 10.13  Distrib 8.0.25, for Win64 (x86_64)
--
-- Host: localhost    Database: dotnet_ubuntu
-- ------------------------------------------------------
-- Server version	8.0.25

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `comments`
--

DROP TABLE IF EXISTS `comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `comments` (
  `ID` bigint NOT NULL AUTO_INCREMENT,
  `PostID` bigint DEFAULT NULL,
  `CommentID` bigint DEFAULT NULL,
  `Content` mediumtext,
  `CommentDateTime` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_POST` (`PostID`),
  CONSTRAINT `FK_POST` FOREIGN KEY (`PostID`) REFERENCES `posts` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=82 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comments`
--

LOCK TABLES `comments` WRITE;
/*!40000 ALTER TABLE `comments` DISABLE KEYS */;
INSERT INTO `comments` VALUES (59,35,-1,'1','2022/1/28 20:24:49'),(60,35,59,'ko;ko;','2022/1/28 20:25:45'),(61,35,60,'ooo','2022/1/28 20:26:39'),(62,32,-1,'joljil','2022/1/28 20:27:00'),(63,35,60,'0976542','2022/1/28 20:29:47'),(64,35,-1,'2','2022/1/28 20:32:41'),(65,35,63,'?','2022/1/28 20:35:46'),(66,35,65,'???','2022/1/28 20:39:06'),(67,35,-1,'3','2022/1/28 21:10:18'),(68,35,-1,'4','2022/1/28 21:10:45'),(69,35,-1,'5','2022/1/28 21:11:51'),(70,35,-1,'6','2022/1/28 21:12:19'),(71,35,64,'2.1','2022/1/28 21:12:31'),(72,35,64,'2.2','2022/1/28 21:13:13'),(73,35,72,'reply 2.2','2022/1/28 21:17:51'),(74,35,64,'Âï•ÂëÄÂï•ÂëÄ','2022/1/28 21:20:48'),(75,24,-1,'Â•Ω','2022/1/28 22:46:48'),(76,6,-1,'Ê≤ôÂèë','2022/2/8 20:51:00'),(77,6,-1,'ÂÜôÁöÑ‰∏çÈîô?','2022/2/8 20:53:56'),(78,6,76,'‰Ω†ÂèØÁúüË°å','2022/2/8 20:54:06'),(79,6,77,'00000','2022/4/3 18:41:19'),(80,6,79,'456789','2022/4/3 18:41:28'),(81,6,78,'324567890','2022/4/3 18:41:47');
/*!40000 ALTER TABLE `comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `messages`
--

DROP TABLE IF EXISTS `messages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `messages` (
  `ID` bigint NOT NULL AUTO_INCREMENT,
  `SendUserID` bigint NOT NULL,
  `ReceiveID` bigint NOT NULL,
  `IsGroup` tinyint(1) NOT NULL,
  `Time` datetime NOT NULL,
  `ContentType` varchar(255) NOT NULL,
  `Content` mediumblob NOT NULL,
  PRIMARY KEY (`ID`),
  KEY `SendUserID` (`SendUserID`),
  KEY `ReceiveID` (`ReceiveID`),
  CONSTRAINT `messages_ibfk_1` FOREIGN KEY (`SendUserID`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `messages_ibfk_2` FOREIGN KEY (`ReceiveID`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=957 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `messages`
--

LOCK TABLES `messages` WRITE;
/*!40000 ALTER TABLE `messages` DISABLE KEYS */;
INSERT INTO `messages` VALUES (305,8,8,0,'2021-12-05 18:18:33','text/plain',_binary 'awdawd'),(317,8,3,0,'2021-12-05 20:14:50','text/plain',_binary 'wadawd'),(318,3,8,0,'2021-12-05 20:14:57','text/plain',_binary 'awdafse'),(319,3,8,0,'2021-12-05 20:15:50','text/plain',_binary 'awdafse'),(320,3,8,0,'2021-12-05 20:15:58','text/plain',_binary '!!!!'),(321,3,8,0,'2021-12-05 20:16:59','text/plain',_binary '!'),(322,3,8,0,'2021-12-05 20:17:20','text/plain',_binary '!'),(323,3,8,0,'2021-12-05 20:22:16','text/plain',_binary 'awd'),(324,3,8,0,'2021-12-05 20:22:51','text/plain',_binary 'safe '),(325,3,8,0,'2021-12-05 20:24:13','text/plain',_binary 'fes'),(326,3,8,0,'2021-12-05 20:24:31','text/plain',_binary 'sefse'),(327,3,8,0,'2021-12-05 20:25:33','text/plain',_binary '   '),(328,3,8,0,'2021-12-05 20:26:50','text/plain',_binary 'SASS '),(329,3,8,0,'2021-12-05 20:30:35','text/plain',_binary 'sefsefes'),(330,8,3,0,'2021-12-05 20:30:48','text/plain',_binary '!!'),(331,3,8,0,'2021-12-05 20:31:01','text/plain',_binary '???'),(332,8,3,0,'2021-12-05 20:40:13','text/plain',_binary '!!!'),(333,3,8,0,'2021-12-05 20:40:24','text/plain',_binary '!!!'),(334,8,3,0,'2021-12-05 20:40:37','text/plain',_binary '~'),(335,3,8,0,'2021-12-05 20:40:44','text/plain',_binary 'Have '),(336,3,8,0,'2021-12-05 20:55:15','text/plain',_binary 'È•ø\Âï'),(337,3,8,0,'2021-12-05 20:55:30','text/plain',_binary '!!'),(338,3,8,0,'2021-12-05 20:59:55','text/plain',_binary 'Á§æ\‰'),(339,8,8,0,'2021-12-05 21:00:08','text/plain',_binary 'edd'),(340,8,3,0,'2021-12-05 21:00:47','text/plain',_binary 'ef'),(341,8,3,0,'2021-12-05 21:06:20','text/plain',_binary 'awdwa'),(342,8,3,0,'2021-12-05 21:07:43','text/plain',_binary 'awd'),(343,3,8,0,'2021-12-05 21:07:58','text/plain',_binary '!!!'),(344,8,8,0,'2021-12-05 21:12:54','text/plain',_binary '!!!'),(345,3,8,0,'2021-12-05 21:13:16','text/plain',_binary '~~~'),(346,3,8,0,'2021-12-05 21:13:28','text/plain',_binary '~~~~'),(347,3,8,0,'2021-12-05 21:13:35','text/plain',_binary '-'),(348,8,8,0,'2021-12-05 21:13:53','text/plain',_binary '~'),(349,3,8,0,'2021-12-05 21:55:58','text/plain',_binary '!!!'),(350,3,8,0,'2021-12-05 22:21:34','text/plain',_binary '4124123'),(357,8,8,0,'2021-12-05 22:35:29','text/plain',_binary '0'),(358,8,3,0,'2021-12-05 22:35:43','text/plain',_binary '00'),(359,8,3,0,'2021-12-05 22:35:58','text/plain',_binary '???'),(360,3,8,0,'2021-12-05 22:40:23','text/plain',_binary 'hi'),(361,8,3,0,'2021-12-05 22:40:40','text/plain',_binary 'ÂìàÂìà\Âì'),(362,3,8,0,'2021-12-05 22:40:55','text/plain',_binary '90'),(363,8,3,0,'2021-12-05 22:40:59','text/plain',_binary 'Ggggg'),(364,3,8,0,'2021-12-05 22:41:17','text/plain',_binary '....'),(365,3,8,0,'2021-12-05 22:41:45','text/plain',_binary '...'),(366,8,3,0,'2021-12-05 22:41:51','text/plain',_binary 'Qqqqq'),(367,8,3,0,'2021-12-05 22:42:01','text/plain',_binary 'ü'),(368,8,3,0,'2021-12-05 22:42:13','text/plain',_binary 'ÁÇπÂáª[http://pinyin.cn/e378919]'),(369,8,3,0,'2021-12-05 22:42:27','text/plain',_binary 'ü'),(370,8,3,0,'2021-12-05 22:42:40','text/plain',_binary 'ÁÇπÂáª[http://img02.sogoucdn.com/app/a/200678/084688cffd72626fb70a5c795051799c.gif]'),(371,8,3,0,'2021-12-06 11:24:19','text/plain',_binary 'ü'),(372,8,3,0,'2021-12-06 11:24:29','text/plain',_binary 'üòåü'),(373,3,8,0,'2021-12-06 11:24:37','text/plain',_binary '!@#$%^^&'),(374,8,3,0,'2021-12-06 11:24:43','text/plain',_binary 'ü'),(375,8,3,0,'2021-12-06 11:24:59','text/plain',_binary 'Ôºå'),(376,3,8,0,'2021-12-06 11:25:05','text/plain',_binary '888'),(377,3,8,0,'2021-12-06 11:25:53','text/plain',_binary 'wori'),(378,3,8,0,'2021-12-06 11:26:33','text/plain',_binary '~~~~'),(379,8,3,0,'2021-12-06 11:26:45','text/plain',_binary '„ÄÇ'),(380,8,3,0,'2021-12-06 11:27:17','text/plain',_binary 'Œµ(*ÔΩ•œâÔΩ•)'),(381,8,3,0,'2021-12-06 11:27:31','text/plain',_binary '(„Öá\„Ö'),(382,3,8,0,'2021-12-06 11:27:42','text/plain',_binary '[][][][][]'),(383,8,3,0,'2021-12-06 11:29:19','text/plain',_binary '„ÄÇ\„'),(384,8,3,0,'2021-12-06 11:29:31','text/plain',_binary '(‡Æáœâ\‡'),(385,8,8,0,'2021-12-06 12:06:20','text/plain',_binary '(ŒøÃ¨Ã¨Ã¨Ã¨Ã¨Ã¨Ã¨ÃèÃÉ…∑Œø\Ã'),(386,8,3,0,'2021-12-06 12:06:39','text/plain',_binary '(ŒøÃ¨Ã¨Ã¨Ã¨Ã¨Ã¨Ã¨ÃèÃÉ…∑Œø\Ã'),(387,3,8,0,'2021-12-06 12:07:23','text/plain',_binary 'cun qian'),(388,8,3,0,'2021-12-06 12:07:39','text/plain',_binary '\Â'),(389,3,8,0,'2021-12-06 12:07:51','text/plain',_binary 'bu ji dao'),(390,8,3,0,'2021-12-06 12:08:06','text/plain',''),(391,3,8,0,'2021-12-06 12:08:19','text/plain',_binary 'sanbinyihao'),(392,8,3,0,'2021-12-06 12:08:34','text/plain',_binary '(‚óè‚Ä¢ ÃÄœâ\‚Ä'),(393,3,8,0,'2021-12-06 12:08:38','text/plain',_binary 'juben'),(394,8,3,0,'2021-12-06 12:08:47','text/plain',_binary '‚îÄ=‚â°Œ£((( „Å§‚Ä¢'),(395,3,8,0,'2021-12-06 12:08:51','text/plain',_binary '@!A\"?M<NM<NMHVH'),(396,8,3,0,'2021-12-06 12:08:53','text/plain',_binary '<(ÔΩÄ^‚Ä≤)'),(397,8,3,0,'2021-12-06 12:09:02','text/plain',_binary '(‚ù§\Œ'),(398,3,8,0,'2021-12-06 12:09:11','text/plain',_binary 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'),(399,8,3,0,'2021-12-06 12:09:15','text/plain',_binary '3'),(400,8,3,0,'2021-12-06 12:10:33','text/plain',_binary 'ÔºØÔº´(\„Ç'),(401,8,3,0,'2021-12-06 12:11:05','text/plain',_binary 'U ¬¥ÍìÉ '),(402,8,3,0,'2021-12-06 12:11:09','text/plain',_binary '\„'),(403,3,8,0,'2021-12-06 12:11:14','text/plain',_binary '777'),(404,8,3,0,'2021-12-06 12:11:18','text/plain',_binary '\„'),(405,8,3,0,'2021-12-06 12:11:44','text/plain',_binary '.'),(406,8,3,0,'2021-12-06 12:12:25','text/plain',_binary '\„'),(407,3,8,0,'2021-12-06 12:12:32','text/plain',_binary '8'),(412,8,3,0,'2021-12-08 17:01:21','text/plain',_binary '‰Ω†'),(413,3,8,0,'2021-12-10 11:16:54','text/plain',_binary '11111'),(414,8,3,0,'2021-12-10 11:17:02','text/plain',_binary 'hewrfoiewrgforeigroihgwq'),(415,3,8,0,'2021-12-10 11:17:10','text/plain',_binary '11111rtshtyjuymjuyrf'),(416,8,3,0,'2021-12-10 11:17:16','text/plain',_binary '!@#$%^&*()'),(417,8,3,0,'2021-12-10 11:18:51','text/plain',_binary 'ccc'),(418,3,8,0,'2021-12-12 11:33:18','text/plain',_binary '~~~'),(420,3,8,0,'2021-12-12 11:38:19','text/plain',_binary '~~~'),(421,8,3,0,'2021-12-12 11:38:28','text/plain',_binary 'eiofhewgf'),(422,3,8,0,'2021-12-12 11:53:04','text/plain',_binary '~~'),(423,8,3,0,'2021-12-12 11:53:13','text/plain',_binary '111111'),(424,8,3,0,'2021-12-12 13:56:08','text/plain',_binary '76777'),(425,3,8,0,'2021-12-12 14:37:25','text/plain',_binary '!!!'),(426,3,8,0,'2021-12-12 14:37:49','text/plain',_binary '!!!'),(427,3,8,0,'2021-12-12 14:37:54','text/plain',_binary '!!!'),(428,3,8,0,'2021-12-12 14:38:00','text/plain',_binary '!!!'),(429,3,8,0,'2021-12-12 14:49:00','text/plain',_binary '!!!'),(430,3,8,0,'2021-12-12 14:49:22','text/plain',_binary 'Êàë\Âú'),(431,3,8,0,'2021-12-12 14:51:03','text/plain',_binary 'ÊàëÂú®101uydfgiwuhguier'),(432,3,8,0,'2021-12-12 22:30:03','text/plain',_binary '!!!'),(433,8,3,0,'2021-12-12 22:30:11','text/plain',_binary '~~~'),(434,8,3,0,'2021-12-12 22:39:59','text/plain',_binary '~'),(435,8,3,0,'2021-12-12 22:40:18','text/plain',_binary '````'),(436,8,3,0,'2021-12-12 22:41:52','text/plain',_binary '```'),(437,3,8,0,'2021-12-12 22:42:01','text/plain',_binary '!!!'),(438,8,3,0,'2021-12-12 22:42:57','text/plain',_binary '~~~'),(439,3,8,0,'2021-12-12 22:43:02','text/plain',_binary '!!!'),(440,8,3,0,'2021-12-12 22:43:25','text/plain',_binary '423424'),(441,3,8,0,'2021-12-12 23:01:50','text/plain',_binary '!!!tjh6ertyer6tu'),(442,8,3,0,'2021-12-12 23:02:11','text/plain',_binary 'lkhoiuhj'),(443,3,8,0,'2021-12-12 23:30:16','text/plain',_binary '!!!tjh6ertyer6tu'),(444,3,8,0,'2021-12-15 11:53:15','text/plain',_binary 'awdwad'),(445,3,8,0,'2021-12-15 11:54:24','text/plain',_binary 'awdwad~~'),(446,3,8,0,'2021-12-15 13:40:48','text/plain',_binary 'awdwad~~'),(447,3,8,0,'2021-12-15 13:53:09','text/plain',_binary 'awdwad~~'),(448,3,8,0,'2021-12-15 13:56:47','text/plain',_binary 'awdwad~~'),(449,3,8,0,'2021-12-15 14:03:02','text/plain',_binary '~~~'),(450,8,3,0,'2021-12-15 14:03:08','text/plain',_binary '`````'),(451,3,8,0,'2021-12-16 16:36:34','text/plain',_binary '\Ô'),(452,3,8,0,'2021-12-16 16:36:47','text/plain',_binary '12345'),(453,8,3,0,'2021-12-16 16:36:58','text/plain',_binary '12345'),(454,8,3,0,'2021-12-16 16:37:23','text/plain',_binary '4444'),(455,3,8,0,'2021-12-16 16:37:32','text/plain',_binary '‰∏ä\Â±'),(456,8,3,0,'2021-12-16 16:38:03','text/plain',_binary 'naohu naohu'),(457,8,3,0,'2021-12-16 16:40:17','text/plain',_binary '~~~~~'),(458,3,8,0,'2021-12-16 16:40:25','text/plain',_binary '\Èó'),(459,8,3,0,'2021-12-16 16:40:32','text/plain',_binary 'ohuo'),(460,8,3,0,'2021-12-16 16:42:17','text/plain',_binary '~~~'),(461,3,8,0,'2021-12-16 16:44:08','text/plain',_binary 'Ôºü'),(462,3,8,0,'2021-12-16 16:44:21','text/plain',_binary 'Êù•‰∫Ü'),(463,3,8,0,'2021-12-16 16:45:29','text/plain',_binary 'ü'),(464,8,3,0,'2021-12-19 17:22:57','text/plain',_binary 'lallaa'),(465,8,3,0,'2021-12-19 17:23:06','text/plain',_binary '111'),(466,8,3,0,'2021-12-19 17:28:53','text/plain',_binary '````'),(467,3,3,0,'2021-12-19 17:29:10','text/plain',_binary 'Ôºü'),(468,3,8,0,'2021-12-19 17:29:17','text/plain',_binary 'Ôºå\Ôº'),(469,8,3,0,'2021-12-19 17:29:27','text/plain',_binary 'esfesfsdrg'),(470,8,4,0,'2021-12-19 17:30:17','text/plain',_binary 'fhweirugfherwg'),(471,8,4,0,'2021-12-19 17:30:23','text/plain',_binary 'efwef'),(472,4,8,0,'2021-12-19 17:30:25','text/plain',_binary 'ÁÉ¶'),(473,8,4,0,'2021-12-19 17:30:41','text/plain',_binary '~~~'),(474,4,8,0,'2021-12-19 17:30:52','text/plain',_binary 'Âìà'),(475,4,8,0,'2021-12-19 17:37:08','text/plain',_binary 'Âà∑'),(476,4,8,0,'2021-12-19 17:37:12','text/plain',_binary 'Âà∑'),(477,4,8,0,'2021-12-19 17:37:27','text/plain',_binary 'Âìà'),(478,3,8,0,'2021-12-19 18:10:20','text/plain',_binary 'ü'),(479,3,8,0,'2021-12-19 18:10:52','text/plain',_binary '„ÄÇ\„'),(480,3,8,0,'2021-12-19 18:11:45','text/plain',_binary 'Áªô‰Ω†Âèë'),(481,3,8,0,'2021-12-19 18:17:42','text/plain',_binary 'üëøü'),(482,8,3,0,'2021-12-19 19:51:58','text/plain',_binary '\„'),(483,3,8,0,'2021-12-19 19:55:01','text/plain',_binary '```'),(484,3,8,0,'2021-12-19 19:55:26','text/plain',_binary '```'),(485,3,8,0,'2021-12-22 15:42:29','text/plain',_binary '\‰Ω'),(486,8,3,0,'2021-12-22 15:42:45','text/plain',_binary 'hello'),(487,3,8,0,'2021-12-22 15:43:03','text/plain',_binary 'ü'),(488,8,3,0,'2021-12-22 15:47:02','text/plain',_binary 'i dont know'),(489,8,3,0,'2021-12-22 16:06:52','text/plain',_binary '88888'),(490,8,3,0,'2021-12-22 16:07:22','text/plain',_binary '00000'),(491,3,8,0,'2021-12-22 16:10:00','text/plain',_binary '\È¢'),(492,8,3,0,'2021-12-22 16:12:41','text/plain',_binary '!!!!'),(493,8,3,0,'2021-12-22 16:12:48','text/plain',_binary '!!!!'),(494,3,8,0,'2021-12-22 16:13:13','text/plain',_binary 'Ôºü\Ô'),(495,8,3,0,'2021-12-22 16:17:24','text/plain',_binary '````'),(496,3,8,0,'2021-12-22 16:17:52','text/plain',_binary '„ÄÇ'),(497,8,3,0,'2021-12-22 16:18:20','text/plain',_binary 'awdaw'),(498,8,3,0,'2021-12-22 16:21:21','text/plain',_binary 'zzzzzzz'),(499,8,3,0,'2021-12-22 16:21:43','text/plain',_binary 'eiuhfewiufgiwergrewg'),(500,8,3,0,'2021-12-22 16:21:55','text/plain',_binary 'awdawdawwf'),(501,8,3,0,'2021-12-22 16:29:29','text/plain',_binary '```'),(502,8,3,0,'2021-12-22 16:30:24','text/plain',_binary '```'),(503,8,3,0,'2021-12-22 16:35:04','text/plain',_binary '0'),(504,8,3,0,'2021-12-22 16:35:15','text/plain',_binary '```'),(505,3,8,0,'2021-12-22 16:35:22','text/plain',_binary 'ËØ∂\Ô'),(506,3,8,0,'2021-12-22 17:43:57','text/plain',_binary '.'),(507,8,3,0,'2021-12-22 17:45:50','text/plain',_binary 'AWSD'),(508,8,3,0,'2021-12-22 17:46:03','text/plain',_binary '!@#$'),(509,3,8,0,'2021-12-22 18:12:41','text/plain',_binary '......'),(510,3,8,0,'2021-12-22 19:31:34','text/plain',_binary '„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ„ÄÇ\„Ä'),(511,8,3,0,'2021-12-22 19:32:27','text/plain',_binary '--------------------------------'),(512,8,3,0,'2021-12-22 19:34:06','text/plain',_binary 'rustttttt'),(513,3,8,0,'2021-12-22 20:07:56','text/plain',_binary '\Â≠'),(514,8,3,0,'2021-12-22 20:08:23','text/plain',_binary '```'),(515,8,3,0,'2021-12-22 20:08:31','text/plain',_binary 'yi'),(516,3,8,0,'2021-12-22 20:22:27','text/plain',_binary 'Ôºü\Ôº'),(517,8,3,0,'2021-12-22 20:23:34','text/plain',_binary 'hahaha'),(518,3,8,0,'2021-12-22 20:45:35','text/plain',_binary '\Â§'),(519,3,8,0,'2021-12-25 23:18:43','text/plain',_binary '666'),(520,3,8,0,'2021-12-25 23:19:34','text/plain',_binary '777'),(521,3,8,0,'2021-12-25 23:32:14','text/plain',_binary 'ggg'),(522,3,8,0,'2021-12-25 23:34:09','text/plain',_binary 'yyy'),(523,3,8,0,'2021-12-25 23:34:31','text/plain',_binary ',,,'),(524,3,8,0,'2021-12-25 23:36:37','text/plain',_binary 'nnn'),(525,3,8,0,'2021-12-25 23:38:37','text/plain',_binary 'kkk'),(526,3,8,0,'2021-12-25 23:39:49','text/plain',_binary '8yughu'),(527,3,8,0,'2021-12-25 23:41:05','text/plain',_binary 'ftgyh'),(528,3,8,0,'2021-12-25 23:41:33','text/plain',_binary 'ub'),(529,3,8,0,'2021-12-25 23:42:08','text/plain',_binary 'hubuiyh'),(530,3,8,0,'2021-12-25 23:42:37','text/plain',_binary 'uiygh'),(531,3,8,0,'2021-12-25 23:43:16','text/plain',_binary 'hjuh'),(532,3,8,0,'2021-12-25 23:50:41','text/plain',_binary ';;;;'),(533,3,8,0,'2021-12-25 23:51:04','text/plain',_binary '...'),(534,3,8,0,'2021-12-25 23:52:10','text/plain',_binary 'bgg'),(535,3,8,0,'2021-12-25 23:58:08','text/plain',_binary 'lolo'),(536,3,8,0,'2021-12-26 00:00:30','text/plain',_binary 'ppp'),(537,3,8,0,'2021-12-26 00:02:20','text/plain',_binary 'jjj'),(538,3,8,0,'2021-12-26 00:03:36','text/plain',_binary '\';;;;'),(539,3,8,0,'2021-12-26 00:05:34','text/plain',_binary 'yyy'),(540,3,8,0,'2021-12-26 00:06:22','text/plain',_binary 'kkk'),(541,3,8,0,'2021-12-26 00:08:02','text/plain',_binary 'kiki'),(542,3,8,0,'2021-12-26 00:08:12','text/plain',_binary 'lll'),(543,8,3,0,'2021-12-26 00:08:51','text/plain',_binary 'ffff'),(544,8,3,0,'2021-12-26 14:05:40','text/plain',_binary '!!!'),(545,8,8,0,'2021-12-26 14:06:38','text/plain',_binary 'vfvfvf'),(546,8,8,0,'2021-12-26 14:06:43','text/plain',_binary 'vfvfvf'),(547,8,8,0,'2021-12-26 14:06:52','text/plain',_binary 'vfvfvf'),(548,8,3,0,'2021-12-26 14:07:55','text/plain',_binary 'vdvdv'),(549,8,3,0,'2021-12-26 14:08:07','text/plain',_binary 'vfvfvf'),(550,8,3,0,'2021-12-26 14:10:14','text/plain',_binary 'cdcdc'),(551,8,3,0,'2021-12-26 14:10:27','text/plain',_binary '     '),(552,8,3,0,'2021-12-26 14:10:57','text/plain',_binary 'vvvv'),(553,8,3,0,'2021-12-26 14:12:32','text/plain',_binary 'dddd'),(554,8,3,0,'2021-12-26 14:19:18','text/plain',_binary 'www'),(555,3,8,0,'2021-12-26 14:19:29','text/plain',_binary '~~~'),(556,3,8,0,'2021-12-26 14:19:43','text/plain',_binary '~~~vvv'),(557,8,3,0,'2021-12-26 14:20:01','text/plain',_binary 'ooo'),(558,8,3,0,'2021-12-26 14:23:53','text/plain',_binary '~~~'),(559,3,8,0,'2021-12-26 14:24:05','text/plain',_binary 'height '),(560,3,8,0,'2021-12-26 14:24:26','text/plain',_binary 'height tt'),(561,3,8,0,'2021-12-26 14:25:13','text/plain',_binary 'vdvd'),(562,8,3,0,'2021-12-26 14:25:20','text/plain',_binary '~~~'),(563,3,8,0,'2021-12-26 14:25:24','text/plain',_binary 'vdvdvvv'),(564,8,3,0,'2021-12-26 14:25:30','text/plain',_binary 'bbb'),(565,8,3,0,'2021-12-26 14:25:32','text/plain',_binary 'bbbb'),(566,3,8,0,'2021-12-26 14:26:31','text/plain',_binary 'vdvdvvv'),(567,3,8,0,'2021-12-26 14:28:17','text/plain',_binary '~~~'),(568,3,8,0,'2021-12-26 14:30:33','text/plain',_binary '~~~~~~~~~~~~~~~~~~~~~'),(569,8,3,0,'2021-12-26 14:31:56','text/plain',_binary '1'),(570,8,3,0,'2021-12-26 14:36:22','text/plain',_binary '```'),(571,3,8,0,'2021-12-26 14:36:32','text/plain',_binary '@@@'),(572,8,3,0,'2021-12-26 14:41:02','text/plain',_binary '@@@'),(573,8,3,0,'2021-12-26 14:41:09','text/plain',_binary 'hewanli'),(574,3,8,0,'2021-12-26 14:41:16','text/plain',_binary '444'),(575,3,8,0,'2021-12-26 14:41:31','text/plain',_binary '444vsrgvsrfs'),(576,3,3,0,'2021-12-26 14:44:37','text/plain',_binary 'dwadaw'),(577,8,3,0,'2021-12-26 14:44:48','text/plain',_binary 'cccc'),(578,3,8,0,'2021-12-26 14:44:55','text/plain',_binary 'dwadaw'),(579,3,8,0,'2021-12-26 14:45:18','text/plain',_binary 'dwadaw'),(580,8,3,0,'2021-12-26 18:56:01','text/plain',_binary '~~~'),(581,3,8,0,'2021-12-26 18:56:16','text/plain',_binary 'ü'),(582,8,3,0,'2021-12-26 18:56:26','text/plain',_binary 'oops'),(583,3,8,0,'2021-12-26 18:56:33','text/plain',_binary 'Âô´'),(584,3,8,0,'2021-12-26 19:01:35','text/plain',_binary 'Êâç\Áü'),(585,8,3,0,'2021-12-26 19:04:48','text/plain',_binary 'fesf'),(586,3,8,0,'2021-12-26 19:08:33','text/plain',_binary 'Ëø≠'),(587,8,3,0,'2021-12-26 19:08:48','text/plain',_binary 'sss'),(588,3,8,0,'2021-12-26 19:10:34','text/plain',_binary 'Âíå'),(589,8,3,0,'2021-12-26 19:10:43','text/plain',_binary '123444'),(590,3,8,0,'2021-12-26 19:10:57','text/plain',_binary 'Â£π'),(591,8,3,0,'2021-12-26 19:11:30','text/plain',_binary '!!!'),(592,3,8,0,'2021-12-26 19:21:49','text/plain',_binary '‰Ω†Â•Ω'),(593,3,8,0,'2021-12-26 19:21:49','text/plain',_binary '‰Ω†Â•Ω'),(594,3,8,0,'2021-12-26 19:22:02','text/plain',_binary '\‰Ω'),(595,3,8,0,'2021-12-26 19:22:02','text/plain',_binary '\‰Ω'),(596,3,8,0,'2021-12-26 19:22:16','text/plain',_binary 'ÂóØ?'),(597,3,8,0,'2021-12-26 19:22:16','text/plain',_binary 'ÂóØ?'),(598,8,3,0,'2021-12-26 19:22:35','text/plain',_binary 'whattt'),(599,8,3,0,'2021-12-26 19:23:31','text/plain',_binary '~~~'),(600,8,3,0,'2021-12-26 19:24:16','text/plain',_binary '```'),(601,8,3,0,'2021-12-26 19:25:47','text/plain',_binary '``'),(602,8,3,0,'2021-12-26 19:26:58','text/plain',_binary '```'),(603,8,3,0,'2021-12-26 19:29:16','text/plain',_binary 'xxx'),(604,8,3,0,'2021-12-26 19:29:30','text/plain',_binary 'zzz'),(605,8,3,0,'2021-12-26 19:29:44','text/plain',_binary '~~~'),(606,3,8,0,'2021-12-26 19:30:18','text/plain',_binary '``'),(607,3,8,0,'2021-12-26 19:30:18','text/plain',_binary '``'),(608,8,3,0,'2021-12-26 19:30:26','text/plain',_binary '?'),(609,8,3,0,'2021-12-26 19:30:53','text/plain',_binary 'zzz'),(610,3,8,0,'2021-12-26 19:30:58','text/plain',_binary '``?'),(611,3,8,0,'2021-12-26 19:30:58','text/plain',_binary '``?'),(612,8,3,0,'2021-12-26 19:31:49','text/plain',_binary 'zzz'),(613,8,3,0,'2021-12-26 19:32:38','text/plain',_binary 'zzz'),(614,3,8,0,'2021-12-26 19:33:07','text/plain',_binary 'Âïä'),(615,3,8,0,'2021-12-26 19:33:07','text/plain',_binary 'Âïä'),(616,3,8,0,'2021-12-26 19:33:33','text/plain',_binary 'Âïä'),(617,3,8,0,'2021-12-26 19:33:40','text/plain',_binary 'Âïä'),(618,3,8,0,'2021-12-26 19:34:31','text/plain',_binary '2\Ê'),(619,3,8,0,'2021-12-26 19:34:40','text/plain',_binary '2\Ê'),(620,3,8,0,'2021-12-26 19:36:28','text/plain',_binary '2Ê¨°'),(621,3,8,0,'2021-12-26 19:36:47','text/plain',_binary '2Ê¨°'),(622,8,3,0,'2021-12-26 19:39:38','text/plain',_binary '~'),(623,3,8,0,'2021-12-26 19:39:47','text/plain',_binary '\Ê'),(624,8,3,0,'2021-12-26 19:49:04','text/plain',_binary '``'),(625,3,8,0,'2021-12-26 19:49:22','text/plain',_binary '!!!!'),(626,8,3,0,'2021-12-26 19:49:32','text/plain',_binary 'qqq'),(627,8,3,0,'2021-12-26 19:50:06','text/plain',_binary 'cdcd'),(628,8,3,0,'2021-12-26 19:51:11','text/plain',_binary 'zzz'),(629,3,8,0,'2021-12-26 19:51:23','text/plain',_binary 'zzz'),(630,3,8,0,'2021-12-26 19:51:51','text/plain',_binary 'zzz'),(631,3,8,0,'2021-12-26 19:53:02','text/plain',_binary 'xxx'),(632,3,8,0,'2021-12-26 19:53:55','text/plain',_binary 'xsxsx'),(633,8,3,0,'2021-12-26 19:54:51','text/plain',_binary 'xzxzx'),(634,8,3,0,'2021-12-26 19:54:56','text/plain',_binary 'aaa'),(635,8,3,0,'2021-12-26 19:55:35','text/plain',_binary 'abcdefg'),(636,3,8,0,'2021-12-26 19:55:47','text/plain',_binary 'hijklmn'),(637,8,3,0,'2021-12-26 19:55:59','text/plain',_binary 'opqrst'),(638,3,8,0,'2021-12-26 19:56:31','text/plain',_binary 'hijklmn\n0000000'),(639,3,8,0,'2021-12-26 19:57:41','text/plain',_binary 'hijklmn\n0000000vccvv'),(640,3,8,0,'2021-12-26 20:08:15','text/plain',_binary '111'),(641,3,8,0,'2021-12-26 20:09:01','text/plain',_binary 'vvv'),(642,3,8,0,'2021-12-26 20:11:47','text/plain',_binary 'vvv'),(643,3,8,0,'2021-12-26 20:13:00','text/plain',_binary 'vvv'),(644,3,8,0,'2021-12-26 20:13:38','text/plain',_binary '```'),(645,3,8,0,'2021-12-26 20:14:59','text/plain',_binary '```'),(646,3,8,0,'2021-12-26 20:19:01','text/plain',_binary '```'),(647,3,8,0,'2021-12-26 20:21:36','text/plain',_binary '```'),(648,3,8,0,'2021-12-26 20:23:19','text/plain',_binary 'xx'),(649,3,8,0,'2021-12-26 20:23:30','text/plain',_binary 'xxx'),(650,3,8,0,'2021-12-26 20:24:20','text/plain',_binary 'xxx'),(651,3,8,0,'2021-12-26 20:30:56','text/plain',_binary 'vfvf'),(652,3,8,0,'2021-12-26 20:31:58','text/plain',_binary 'bbbb'),(653,3,8,0,'2021-12-26 20:35:04','text/plain',_binary 'nihaoya'),(654,3,8,0,'2021-12-26 20:35:35','text/plain',_binary 'bbbb'),(655,3,8,0,'2021-12-26 20:46:26','text/plain',_binary 'fefef'),(656,3,8,0,'2021-12-26 20:46:37','text/plain',_binary 'fefef'),(657,3,8,0,'2021-12-26 20:49:08','text/plain',_binary 'dfdfdf'),(658,3,8,0,'2021-12-26 20:54:01','text/plain',_binary 'fsefes'),(659,3,8,0,'2021-12-26 20:54:27','text/plain',_binary '\Êà'),(660,8,3,0,'2021-12-26 20:54:43','text/plain',_binary 'ren'),(661,3,8,0,'2021-12-26 20:55:11','text/plain',_binary '\Êà'),(662,3,8,0,'2021-12-26 20:55:39','text/plain',_binary 'Êàë\‰'),(663,3,8,0,'2021-12-26 20:56:21','text/plain',_binary 'Êàë‰ª¨'),(664,3,8,0,'2021-12-26 20:59:03','text/plain',_binary '\Âò'),(665,8,3,0,'2021-12-26 20:59:09','text/plain',_binary 'yi'),(666,3,8,0,'2021-12-26 20:59:17','text/plain',_binary '(‚äôÀç'),(667,3,8,0,'2021-12-26 20:59:27','text/plain',_binary '(‚äôÀç‚äô)'),(668,8,3,0,'2021-12-26 20:59:46','text/plain',_binary 'fabuchulai'),(669,3,8,0,'2021-12-26 21:01:33','text/plain',_binary '\Êà'),(670,8,3,0,'2021-12-26 21:01:46','text/plain',_binary 'shen me'),(671,8,3,0,'2021-12-26 21:01:59','text/plain',_binary '!!!'),(672,3,8,0,'2021-12-26 21:02:03','text/plain',_binary '\Êà'),(673,3,8,0,'2021-12-26 21:02:20','text/plain',_binary 'vvv'),(674,8,3,0,'2021-12-26 21:02:24','text/plain',_binary 'dwdw'),(675,8,3,0,'2021-12-26 21:02:32','text/plain',_binary 'dwdwada'),(676,8,3,0,'2021-12-26 21:03:07','text/plain',_binary 'fesf'),(677,3,8,0,'2021-12-26 21:03:11','text/plain',_binary 'Èªë'),(678,8,3,0,'2021-12-26 21:03:29','text/plain',_binary '12'),(679,3,8,0,'2021-12-26 21:03:42','text/plain',_binary 'Ëææ'),(680,8,3,0,'2021-12-26 21:03:44','text/plain',_binary 'dwd'),(681,8,3,0,'2021-12-26 21:03:53','text/plain',_binary 'dwdw'),(682,8,3,0,'2021-12-26 21:03:57','text/plain',_binary 'asdsa'),(683,3,8,0,'2021-12-26 21:04:00','text/plain',_binary 'Âêä\Ë'),(684,8,3,0,'2021-12-26 21:04:04','text/plain',_binary 'ddddd'),(685,8,3,0,'2021-12-26 21:04:26','text/plain',_binary 'fesfes'),(686,3,8,0,'2021-12-26 21:04:40','text/plain',_binary 'Êàñ'),(687,8,3,0,'2021-12-26 21:04:45','text/plain',_binary 'dddd'),(688,8,3,0,'2021-12-26 21:04:54','text/plain',_binary 'vvv'),(689,3,8,0,'2021-12-26 21:05:04','text/plain',_binary 'vvv'),(690,8,3,0,'2021-12-26 21:05:09','text/plain',_binary 'fff'),(691,8,3,0,'2021-12-26 21:05:14','text/plain',_binary 'sss'),(692,8,3,0,'2021-12-26 21:05:25','text/plain',_binary 'xxx'),(693,3,8,0,'2021-12-26 21:05:28','text/plain',_binary 'Êó•'),(694,3,8,0,'2021-12-26 21:07:03','text/plain',_binary 'Êó•'),(695,8,3,0,'2021-12-26 21:07:07','text/plain',_binary 'feef'),(696,3,8,0,'2021-12-26 21:07:14','text/plain',_binary 'ÂëÉ'),(697,8,3,0,'2021-12-26 21:07:19','text/plain',_binary 'fff'),(698,3,8,0,'2021-12-26 21:07:24','text/plain',_binary 'ÂëÉ'),(699,3,8,0,'2021-12-26 21:07:38','text/plain',_binary 'ÂëÉ'),(700,8,3,0,'2021-12-26 21:07:42','text/plain',_binary 'ee'),(701,8,3,0,'2021-12-26 21:07:50','text/plain',_binary 'ggg'),(702,3,8,0,'2021-12-26 21:07:53','text/plain',_binary 'Âíå'),(703,3,8,0,'2021-12-26 21:08:53','text/plain',_binary 'Âï¶Âï¶Âï¶Âï¶Âï¶Âï¶Âï¶Âï¶ OKO'),(704,3,8,0,'2022-01-03 19:38:52','text/plain',_binary 'Usb\Ë∞'),(705,3,8,0,'2022-01-03 19:39:29','text/plain',_binary 'Ëøò\Êå'),(706,3,3,0,'2022-01-03 19:39:47','text/plain',_binary '\Âï'),(707,3,8,0,'2022-01-03 19:39:58','text/plain',_binary '\Âï'),(708,3,8,0,'2022-01-03 19:40:12','text/plain',_binary 'ÂëÉ'),(709,8,3,0,'2022-01-03 19:40:20','text/plain',_binary '999'),(710,8,3,0,'2022-01-03 19:40:31','text/plain',_binary 'kkkkkkk'),(711,3,8,0,'2022-01-03 19:40:48','text/plain',_binary '\Èò'),(712,8,3,0,'2022-01-03 19:42:24','text/plain',_binary 'hello'),(713,8,3,0,'2022-01-03 19:43:29','text/plain',_binary 'Ren'),(714,8,3,0,'2022-01-03 19:44:16','text/plain',_binary 'lalalalaaaaaa'),(715,8,3,0,'2022-01-03 19:44:20','text/plain',_binary 'uwgdwuiwgiuwfwf'),(716,3,8,0,'2022-01-03 19:52:07','text/plain',''),(717,8,3,0,'2022-01-03 19:52:34','text/plain',_binary 'grdgrdgdrg'),(718,8,3,0,'2022-01-03 19:52:37','text/plain',_binary 'thtfhtfh'),(719,8,3,0,'2022-01-03 20:22:43','text/plain',_binary '123   123'),(720,3,8,0,'2022-01-03 20:26:31','text/plain',_binary 'ÔºüÔºü\Ô'),(721,3,8,0,'2022-01-03 20:26:41','text/plain',_binary '          \Èò'),(722,8,3,0,'2022-01-03 20:28:10','text/plain',_binary 'Ôºü\Ô'),(723,3,3,0,'2022-01-03 20:28:59','text/plain',_binary 'Ôºü'),(724,8,3,0,'2022-01-03 20:31:11','text/plain',_binary '//////'),(725,8,3,0,'2022-01-03 20:36:29','text/plain',_binary 'efesfse'),(726,8,3,0,'2022-01-03 20:37:01','text/plain',_binary '`````'),(727,8,3,0,'2022-01-03 20:37:25','text/plain',_binary '21321321321'),(728,3,8,0,'2022-01-03 20:37:39','text/plain',_binary 'È©¨‰∏ä\Â'),(729,3,8,0,'2022-01-03 20:39:01','text/plain',_binary 'üòÉüòÉüòÉüòÉü'),(730,8,3,0,'2022-01-03 20:40:10','text/plain',_binary '0000000'),(731,8,3,0,'2022-01-03 20:40:17','text/plain',_binary 'thththththt'),(732,8,3,0,'2022-01-03 20:40:39','text/plain',_binary 'haha'),(733,8,3,0,'2022-01-03 21:43:50','text/plain',_binary '0.0'),(734,8,3,0,'2022-01-03 21:46:31','text/plain',_binary '-_-'),(735,3,8,0,'2022-01-03 21:47:41','text/plain',_binary 'ËØ¥ÂÆûËØù\Êò'),(736,8,3,0,'2022-01-03 21:48:56','text/plain',_binary '000'),(737,3,8,0,'2022-01-04 10:21:08','text/plain',_binary 'a2'),(738,8,3,0,'2022-01-04 10:21:16','text/plain',_binary '666'),(739,8,3,0,'2022-01-04 10:21:27','text/plain',_binary 'azhe'),(740,8,3,0,'2022-01-04 10:22:18','text/plain',_binary '88888'),(741,8,3,0,'2022-01-04 10:47:41','text/plain',_binary 'ei'),(742,3,8,0,'2022-01-04 19:00:09','text/plain',_binary '111'),(743,3,8,0,'2022-01-04 19:00:20','text/plain',''),(744,3,8,0,'2022-01-04 19:05:52','text/plain',_binary '\‰∫'),(745,8,3,0,'2022-01-04 19:08:45','text/plain',_binary 'bu zhi dao'),(746,3,8,0,'2022-01-04 19:09:03','text/plain',_binary '\„'),(747,3,8,0,'2022-01-04 19:25:34','text/plain',_binary '\Â'),(748,8,3,0,'2022-01-04 19:25:42','text/plain',_binary '~~~'),(749,3,8,0,'2022-01-04 19:25:50','text/plain',_binary '„ÄÇ\„'),(750,8,3,0,'2022-01-04 20:13:45','text/plain',_binary '12345'),(751,3,8,0,'2022-01-04 20:13:53','text/plain',_binary '‰∏ä\Â±'),(752,3,8,0,'2022-01-05 10:26:30','text/plain',_binary '\Áî'),(753,3,8,0,'2022-01-05 10:27:13','text/plain',_binary '\Âì'),(754,3,8,0,'2022-01-05 10:31:51','text/plain',_binary '\Âó'),(755,8,3,0,'2022-01-05 10:32:08','text/plain',_binary 'where are you'),(756,8,3,0,'2022-01-05 10:39:56','text/plain',_binary 'hahahha'),(757,8,3,0,'2022-01-05 10:40:07','text/plain',_binary 'this'),(758,8,3,0,'2022-01-05 10:47:38','text/plain',_binary 'weird'),(759,3,8,0,'2022-01-05 11:26:06','text/plain',_binary 'ÊÄé'),(760,3,8,0,'2022-01-05 12:55:37','text/plain',_binary '.'),(761,8,3,0,'2022-01-05 14:02:10','text/plain',_binary '11111'),(762,3,8,0,'2022-01-05 14:02:18','text/plain',_binary '6666'),(763,3,8,0,'2022-01-05 14:02:25','text/plain',_binary 'Âì¶'),(764,3,8,0,'2022-01-05 14:02:40','text/plain',_binary '„ÄÇ'),(765,8,3,0,'2022-01-05 14:02:45','text/plain',_binary '959592'),(766,15,8,0,'2022-01-05 14:45:37','text/plain',_binary '1111'),(767,15,8,0,'2022-01-05 14:46:12','text/plain',_binary '111'),(768,8,15,0,'2022-01-05 14:52:25','text/plain',_binary '123123'),(769,8,15,0,'2022-01-05 14:52:35','text/plain',_binary '1111'),(770,15,8,0,'2022-01-05 14:52:42','text/plain',_binary '123'),(771,8,15,0,'2022-01-05 14:52:50','text/plain',_binary 'qaqaqa'),(772,8,15,0,'2022-01-05 14:53:05','text/plain',_binary 'cscscs'),(773,8,15,0,'2022-01-05 14:53:16','text/plain',_binary 'XAxAX'),(774,9,3,0,'2022-01-06 15:24:07','text/plain',_binary 'etfd'),(775,9,8,0,'2022-01-06 15:27:34','text/plain',_binary '13'),(776,8,9,0,'2022-01-06 15:47:19','text/plain',_binary '111'),(777,8,9,0,'2022-01-06 15:47:32','text/plain',_binary '111'),(778,8,9,0,'2022-01-06 15:47:34','text/plain',_binary '111'),(779,8,15,0,'2022-01-06 17:26:27','text/plain',_binary '!!!!!!!'),(780,15,8,0,'2022-01-06 17:26:46','text/plain',_binary '123'),(781,8,15,0,'2022-01-06 17:26:49','text/plain',_binary 'lalal'),(782,15,8,0,'2022-01-06 17:31:11','text/plain',_binary 'dododo'),(783,8,15,0,'2022-01-06 17:31:29','text/plain',_binary 'meiyoubian'),(784,8,15,0,'2022-01-06 17:31:30','text/plain',''),(785,8,15,0,'2022-01-06 17:31:33','text/plain',_binary 'ss'),(786,15,8,0,'2022-01-06 17:34:12','text/plain',_binary 'xiaosi'),(787,8,15,0,'2022-01-07 10:14:44','text/plain',_binary 'hello'),(788,15,15,0,'2022-01-07 10:14:45','text/plain',_binary '123'),(789,8,15,0,'2022-01-07 10:16:37','text/plain',_binary 'qqq'),(790,15,8,0,'2022-01-07 10:16:58','text/plain',_binary '123'),(791,8,15,0,'2022-01-07 10:17:10','text/plain',_binary '999'),(792,8,15,0,'2022-01-07 10:17:37','text/plain',_binary 'aaa'),(793,8,15,0,'2022-01-07 10:18:51','text/plain',''),(794,8,15,0,'2022-01-07 10:19:01','text/plain',_binary 'aaaaaa'),(795,15,8,0,'2022-01-07 10:19:13','text/plain',_binary '123'),(796,8,15,0,'2022-01-07 10:19:21','text/plain',_binary 'okok'),(797,3,8,0,'2022-01-07 10:22:29','text/plain',_binary 'Âõõ'),(798,8,3,0,'2022-01-07 10:22:51','text/plain',_binary 'lllll'),(799,8,3,0,'2022-01-07 10:26:54','text/plain',_binary '12333'),(800,8,3,0,'2022-01-07 10:51:00','text/plain',_binary '111'),(801,8,3,0,'2022-01-07 10:52:28','text/plain',_binary '777'),(802,3,8,0,'2022-01-07 10:54:34','text/plain',_binary '„ÄÇ'),(803,8,8,0,'2022-01-07 10:59:06','text/plain',_binary '~~~'),(804,8,3,0,'2022-01-07 10:59:25','text/plain',_binary '~~~'),(805,3,8,0,'2022-01-07 10:59:32','text/plain',_binary '\Êª'),(806,3,8,0,'2022-01-07 11:00:25','text/plain',_binary '\Âì'),(807,3,8,0,'2022-01-13 22:50:43','text/plain',_binary '\Â•'),(808,3,8,0,'2022-01-18 21:08:39','text/plain',_binary 'ËÅä'),(809,3,8,0,'2022-01-18 21:09:28','text/plain',_binary 'ËÅä'),(810,8,3,0,'2022-01-18 21:09:55','text/plain',_binary 'Âïä'),(811,3,8,0,'2022-01-18 21:10:11','text/plain',_binary '\Êå'),(812,8,3,0,'2022-01-18 21:10:26','text/plain',_binary 'Âïä\Âï'),(813,3,8,0,'2022-01-18 21:10:47','text/plain',_binary '\Êå'),(814,8,3,0,'2022-01-18 21:10:52','text/plain',_binary 'Âïä\Âï'),(815,8,8,0,'2022-01-18 21:12:28','text/plain',_binary '\Â§'),(816,8,3,0,'2022-01-18 21:12:33','text/plain',_binary '\Â§'),(817,8,3,0,'2022-01-18 21:12:53','text/plain',_binary 'Âíã'),(818,8,3,0,'2022-01-18 21:15:33','text/plain',_binary '‰∏ç\Â'),(819,8,3,0,'2022-01-18 21:17:01','text/plain',_binary 'Âë∏'),(820,8,3,0,'2022-01-18 21:46:39','text/plain',_binary '\ËÅ'),(821,8,3,0,'2022-01-18 21:47:14','text/plain',_binary '\ËÅ'),(822,8,3,0,'2022-01-18 21:47:58','text/plain',_binary '\ËÅ'),(823,8,3,0,'2022-01-18 21:49:23','text/plain',_binary '\ËÅ'),(824,8,8,0,'2022-01-18 21:50:38','text/plain',_binary 'Ê∑±'),(825,8,3,0,'2022-01-18 21:50:44','text/plain',_binary 'Ê∑±'),(826,8,3,0,'2022-01-18 21:51:32','text/plain',_binary 'Ê∑±'),(827,3,8,0,'2022-01-18 21:52:06','text/plain',_binary '111'),(828,8,3,0,'2022-01-18 21:52:17','text/plain',_binary 'Ê∑±'),(829,8,3,0,'2022-01-18 21:53:06','text/plain',_binary 'Êù•'),(830,3,3,0,'2022-01-18 21:54:36','text/plain',_binary 'Âïä'),(831,3,8,0,'2022-01-18 21:54:43','text/plain',_binary 'Âïä'),(832,8,3,0,'2022-01-18 21:55:00','text/plain',_binary '```'),(833,8,3,0,'2022-01-18 21:56:53','text/plain',_binary '```Âíå'),(834,3,8,0,'2022-01-18 21:57:07','text/plain',_binary 'Âïä\Âï'),(835,3,8,0,'2022-01-18 21:58:08','text/plain',_binary 'Âïä\Âï'),(836,8,3,0,'2022-01-18 21:58:32','text/plain',_binary 'È¨ºÁü•ÈÅì\Ë'),(837,3,8,0,'2022-01-18 21:58:56','text/plain',_binary 'ÁÆÄÁõ¥\Ë∑'),(838,8,3,0,'2022-01-18 21:59:12','text/plain',_binary 'Â±û‰∫é\Ê'),(839,3,8,0,'2022-01-18 21:59:40','text/plain',_binary 'ÈõÄ\È'),(840,8,3,0,'2022-01-18 22:00:19','text/plain',_binary '\Êâ'),(841,8,3,0,'2022-01-18 22:04:15','text/plain',_binary 'Êµ™\Ê'),(842,3,8,0,'2022-01-18 22:04:36','text/plain',_binary 'ÂçÅ‰∏Ä'),(843,3,8,0,'2022-01-18 22:05:08','text/plain',_binary '\Ê'),(844,8,3,0,'2022-01-18 23:16:10','text/plain',_binary 'ha1'),(845,3,8,0,'2022-01-18 23:16:25','text/plain',_binary 'Âú®'),(846,8,3,0,'2022-01-18 23:16:40','text/plain',_binary 'Êàë'),(847,8,3,0,'2022-01-18 23:17:02','text/plain',_binary 'Êàë'),(848,8,3,0,'2022-01-18 23:17:41','text/plain',_binary 'Êàë'),(849,8,8,0,'2022-01-18 23:20:47','text/plain',_binary 'Êàë\È'),(850,8,3,0,'2022-01-18 23:20:53','text/plain',_binary 'Êàë\È'),(851,3,8,0,'2022-01-18 23:23:49','text/plain',_binary '‰π∞'),(852,3,8,0,'2022-01-18 23:24:15','text/plain',_binary '‰π∞'),(853,3,8,0,'2022-01-18 23:24:22','text/plain',_binary '‰π∞‰π∞'),(854,8,8,0,'2022-01-18 23:24:50','text/plain',_binary 'Âíã'),(855,3,8,0,'2022-01-18 23:25:49','text/plain',_binary 'ÂëÉ'),(856,8,3,0,'2022-01-18 23:25:57','text/plain',_binary '\È¢'),(857,3,8,0,'2022-01-18 23:26:11','text/plain',_binary 'Â∫îËØ•\Ê'),(858,8,3,0,'2022-01-18 23:26:39','text/plain',_binary '‰ΩÜÊòØËøò\Ê'),(859,8,3,0,'2022-01-18 23:26:53','text/plain',_binary 'ËøòÊúâ\Á'),(860,8,3,0,'2022-01-18 23:27:40','text/plain',_binary 'Âì≠'),(861,8,3,0,'2022-01-18 23:27:53','text/plain',_binary 'Âì≠'),(862,8,3,0,'2022-01-18 23:28:04','text/plain',_binary 'Âì≠'),(863,3,8,0,'2022-01-21 17:49:08','text/plain',_binary 'hhahaa'),(864,8,3,0,'2022-01-21 17:49:25','text/plain',_binary '\‰Ω'),(865,3,8,0,'2022-01-29 13:20:17','text/plain',_binary '123333'),(866,3,8,0,'2022-01-29 13:20:46','text/plain',_binary '123333'),(867,8,3,0,'2022-01-29 13:20:54','text/plain',_binary 'ewe '),(868,3,8,0,'2022-01-29 13:21:05','text/plain',_binary '666'),(869,8,3,0,'2022-01-29 15:47:51','text/plain',_binary '‰Ω†\Âì'),(870,8,3,0,'2022-01-29 15:48:59','text/plain',_binary '444'),(871,8,3,0,'2022-01-29 16:14:49','text/plain',_binary '\Ê¨'),(872,8,3,0,'2022-01-29 16:15:47','text/plain',_binary 'Ê¨¢\Ëø'),(873,8,3,0,'2022-01-29 16:18:00','text/plain',_binary '123'),(874,8,3,0,'2022-01-29 16:18:04','text/plain',_binary '456'),(875,3,8,0,'2022-01-29 17:25:27','text/plain',_binary 'awdwad'),(876,3,8,0,'2022-01-29 17:26:28','text/plain',_binary 'awdwadff'),(877,3,8,0,'2022-01-29 17:27:30','text/plain',_binary 'awdwadff'),(878,3,8,0,'2022-01-29 17:29:22','text/plain',_binary 'awdwadff'),(879,3,8,0,'2022-01-29 18:00:52','text/plain',_binary 'awdwadff'),(880,3,8,0,'2022-01-29 18:01:26','text/plain',_binary 'oop'),(881,3,8,0,'2022-01-29 18:04:02','text/plain',_binary 'oop'),(882,3,8,0,'2022-01-29 18:08:01','text/plain',_binary 'oop'),(883,3,8,0,'2022-01-29 18:12:07','text/plain',_binary 'oops'),(884,3,8,0,'2022-01-29 18:17:26','text/plain',_binary 'oops'),(885,3,8,0,'2022-01-29 18:21:39','text/plain',_binary 'oops'),(886,3,8,0,'2022-01-29 18:22:55','text/plain',_binary 'oops'),(887,3,8,0,'2022-01-29 18:23:29','text/plain',_binary 'oops'),(888,3,8,0,'2022-01-29 18:25:16','text/plain',_binary 'oops'),(889,3,8,0,'2022-01-29 18:25:31','text/plain',_binary 'oops'),(890,3,8,0,'2022-01-29 18:27:48','text/plain',_binary 'oops'),(891,3,8,0,'2022-01-29 18:28:03','text/plain',_binary 'oops'),(892,3,8,0,'2022-01-29 18:29:39','text/plain',_binary 'oops'),(893,3,8,0,'2022-01-29 18:33:54','text/plain',_binary 'oops'),(894,3,8,0,'2022-01-29 18:36:59','text/plain',_binary 'oops'),(895,3,8,0,'2022-01-29 18:38:54','text/plain',_binary 'oops4reggre'),(896,8,3,0,'2022-02-06 22:23:27','text/plain',_binary '\Âó'),(897,3,8,0,'2022-02-17 15:23:29','text/plain',_binary '111'),(898,8,3,0,'2022-02-17 15:24:00','text/plain',_binary 'tgtrg'),(899,8,8,0,'2022-02-17 15:32:19','text/plain',_binary '987'),(900,8,8,0,'2022-02-17 15:34:09','text/plain',_binary '666'),(901,8,3,0,'2022-02-17 15:34:37','text/plain',_binary '8dui'),(902,8,3,0,'2022-02-17 15:34:44','text/plain',_binary '000'),(903,8,3,0,'2022-02-17 15:34:47','text/plain',_binary '000'),(904,3,8,0,'2022-02-17 15:39:50','text/plain',_binary 'ui\‰'),(905,8,3,0,'2022-02-17 15:39:57','text/plain',_binary 'juju'),(906,8,3,0,'2022-02-17 15:42:05','text/plain',_binary 'lioloil'),(907,8,3,0,'2022-02-17 15:42:16','text/plain',_binary 'lll'),(908,3,8,0,'2022-02-17 15:42:45','text/plain',_binary '\Âí'),(909,8,8,0,'2022-02-17 15:42:54','text/plain',_binary ',,,,'),(910,8,8,0,'2022-02-17 15:43:26','text/plain',_binary '888'),(911,3,8,0,'2022-02-17 15:43:42','text/plain',_binary '777'),(912,8,8,0,'2022-02-17 15:44:31','text/plain',_binary '8888'),(913,3,8,0,'2022-02-17 15:45:39','text/plain',_binary 'ÊçÆ\‰'),(914,3,8,0,'2022-02-17 15:46:03','text/plain',_binary 'ÊçÆ‰∏ç\Â'),(915,8,8,0,'2022-02-17 15:46:13','text/plain',_binary 'lllll'),(916,8,8,0,'2022-02-17 15:47:10','text/plain',_binary ';p;p;p;'),(917,3,3,0,'2022-02-17 15:48:38','text/plain',_binary '...'),(918,3,8,0,'2022-02-17 15:52:01','text/plain',_binary 'iiiiii'),(919,8,8,0,'2022-02-17 15:52:18','text/plain',_binary 'kkk'),(920,8,8,0,'2022-02-17 15:53:31','text/plain',_binary '...'),(921,3,8,0,'2022-02-17 15:53:38','text/plain',_binary 'iiiiii.l.l.ll.l.l'),(922,8,8,0,'2022-02-17 15:55:04','text/plain',_binary 'kikiki'),(923,8,8,0,'2022-02-17 15:55:58','text/plain',_binary 'llll'),(924,8,3,0,'2022-02-17 15:56:12','text/plain',_binary ',,,,'),(925,3,8,0,'2022-02-17 15:57:09','text/plain',_binary 'Êù•'),(926,8,8,0,'2022-02-17 15:57:22','text/plain',_binary '????'),(927,8,3,0,'2022-02-17 15:57:31','text/plain',_binary '000'),(928,3,8,0,'2022-02-17 15:57:40','text/plain',_binary 'Êù•'),(929,3,8,0,'2022-02-17 16:06:01','text/plain',_binary 'Â•á\Â'),(930,8,3,0,'2022-02-17 16:06:07','text/plain',_binary 'hahahah'),(931,3,8,0,'2022-02-17 16:09:09','text/plain',_binary 'Â•á\Â'),(932,3,8,0,'2022-02-17 16:09:56','text/plain',_binary '````'),(933,3,8,0,'2022-02-17 16:13:49','text/plain',_binary '121212'),(934,8,3,0,'2022-02-17 16:13:57','text/plain',_binary 'haole'),(935,8,3,0,'2022-02-17 16:14:22','text/plain',_binary 'very lucky'),(936,3,8,0,'2022-02-17 16:14:36','text/plain',_binary 'llll'),(937,3,8,0,'2022-02-18 17:30:04','text/plain',_binary '111'),(938,3,8,0,'2022-02-18 17:42:26','text/plain',_binary 'Êù•'),(939,3,8,0,'2022-02-18 17:44:57','text/plain',_binary 'Èí±'),(940,3,8,0,'2022-02-18 17:45:11','text/plain',_binary '‰ªÄ'),(941,3,8,0,'2022-02-18 17:45:32','text/plain',_binary '‰ªÄ'),(942,8,8,0,'2022-02-18 17:45:52','text/plain',_binary 'woyu'),(943,3,8,0,'2022-02-18 17:46:16','text/plain',_binary '‰ªÄ'),(944,3,8,0,'2022-02-18 17:46:29','text/plain',_binary '!!!'),(945,3,8,0,'2022-02-18 17:48:07','text/plain',_binary '!!!'),(946,8,8,0,'2022-02-18 17:49:25','text/plain',_binary 'come on'),(947,8,3,0,'2022-02-18 17:49:37','text/plain',_binary 'fa cuo e'),(948,3,8,0,'2022-02-18 17:51:07','text/plain',_binary '000'),(949,4,8,0,'2022-04-03 18:30:05','text/plain',_binary '111'),(950,4,8,0,'2022-04-03 18:31:35','text/plain',_binary 'Www'),(951,8,4,0,'2022-04-03 18:31:41','text/plain',_binary 'jbkjbgj'),(952,8,4,0,'2022-04-03 18:31:54','text/plain',_binary 'mijim'),(953,4,8,0,'2022-04-03 18:32:00','text/plain',_binary '5d6dyf'),(954,4,8,0,'2022-04-03 18:32:08','text/plain',_binary 'Hfs7ts7t'),(955,4,8,0,'2022-04-03 18:33:54','text/plain',_binary '11111'),(956,4,8,0,'2022-04-03 18:34:01','text/plain',_binary '3334');
/*!40000 ALTER TABLE `messages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `posts` (
  `ID` bigint NOT NULL AUTO_INCREMENT,
  `Title` varchar(255) NOT NULL,
  `Summary` varchar(1023) NOT NULL,
  `Focus` varchar(255) NOT NULL,
  `PostDateTime` varchar(255) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `postID` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES (6,'Á¨¨‰∏Ä‰∏™Â∏ñÂ≠ê','ÂßîÊâòÁöÑÁ≤æÈ´ì --- ‰ª•ÂèòÈáè‰Ωú‰∏∫ÊñπÊ≥ï(ÂáΩÊï∞)‰ΩøÁî®,Á±ª‰ºº‰∫éC‰∏≠ÂáΩÊï∞ÊåáÈíà',' C# ','2019/1/1 0:00:00'),(16,'grsgsvbfbrdbgr','tehbergerththngbfdbgnerhbrgrgrgrdbgnnuyi','sgbrdges','2021/7/29 21:38:40'),(17,'ÊàëÁöÑGitHub','ÊàëÁöÑGitHub\n\nÊàëÁöÑGitHub\nÊàëÁöÑGitHub\nÊàëÁöÑGitHub\n\nÊàëÁöÑ','GitHub','2021/7/29 21:49:47'),(18,'123123','123123123123123','123123123','2021/7/29 21:51:51'),(19,'45335278','3485345343483456486486483','737352786786','2021/7/29 21:53:47'),(20,'Âï¶Âï¶Âï¶','ÂïäÂï¶Âï¶Âï¶Âï¶Âï¶ÂïäÂï¶Âï¶Âï¶Âï¶Âï¶\n\nÂì¶‰∏çÈîô','Âï¶Âï¶','2021/7/29 21:59:04'),(23,'GitHub‰ΩøÁî®','Âú®ÁºñÁ®ãÂ±äÊúâ‰∏™ÂÖ±ËØÜÔºåÊÉ≥Ë¶ÅÊàê‰∏∫‰∏Ä‰∏™ÂêàÊ†ºÁöÑÁ®ãÂ∫èÂëòÂøÖÈ°ªË¶ÅÊéåÊè° GitHub ÁöÑÁî®Ê≥ïÔºÅ\n\n','GitHub','2021/7/30 12:28:17'),(24,'HTML 5 ÂÖ®Â±Ä contenteditable Â±ûÊÄß','ÂÆö‰πâÂíåÁî®Ê≥ï\n\ncontenteditable Â±ûÊÄßËßÑÂÆöÊòØÂê¶ÂèØÁºñËæëÂÖÉÁ¥†ÁöÑÂÜÖÂÆπ„ÄÇ\n\n','HTML','2021/7/30 13:28:21'),(29,'\"ÂùöÊåÅÂ∞±ÊòØËÉúÂà©\"','\"Êó†È°ªÊãÖÂøÉÔºåÊòéÂ§©Êó©‰∏äÁâõÂ•∂Ëøò‰ºöÊîæÂú®Èó®ÂâçÁöÑÂè∞Èò∂‰∏äÔºå„ÄäÊñ∞ÊîøÊ≤ªÂÆ∂Êä•„Äã‰πü‰ºöÁÖßÂ∏∏Âá∫Áâà„ÄÇ\n‚Äî‚ÄîG\"','\"Âä†Ê≤π,Â••Âà©Áªô!!!\"','2021/8/19 18:09:58'),(30,'\"Â•Ω‰πÖ‰∏çËßÅ\"','\"Ôºà‰ªÖ‰ª£Ë°®‰∏™‰∫∫ËßÇÁÇπÔºå‰∏çÂñúÂãøÂñ∑ÔºåÂπ∂Êó†Âò≤Á¨ëÂíåËÆΩÂà∫ÁöÑÊÑèÂë≥ÔºåÂ¶ÇÊûúÊúâÂì™ÈáåËØ≠Ë®Ä‰∏çÂΩìÔºåÊàñÊúâË®ÄËÆ∫ÂÜí\"','\"ÁîöÊòØÊÉ≥Âøµ\"','2021/8/19 18:22:38'),(31,'!!!!!','!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!','!!!!','2021/8/19 18:46:46'),(32,'‰∫§‰∏™ÊúãÂèã','Format in kotlin string templates\n\nKotli','‰∫§‰∏™ÊúãÂèã','2021/12/5 21:36:42'),(33,'Êàë‰πüÊÉ≥‰∫§‰∏™ÊúãÂèã','Êï∞ÊçÆÂ∫ì	ÂØπÂ∫îJavaÁ±ªÔºàÊóßÔºâ	ÂØπÂ∫îJavaÁ±ªÔºàÊñ∞Ôºâ\nDATETIME	java.','‰∫§‰∏™ÊúãÂèã','2021/12/5 21:38:54'),(34,'Âä†Â•ΩÂèã','Âä†Â•ΩÂèã\n','Âä†Â•ΩÂèã','2021/12/5 21:40:47'),(35,'Have a meeting','dd','meeting','2021/12/5 21:42:31'),(36,'web of science','123456','123','2022/1/5 14:47:46'),(37,'Âü∫‰∫é.net CoreÁöÑORMÊ°ÜÊû∂‰∏éWebSocketÊ∂àÊÅØÊ°ÜÊû∂Á±ªÂ∫ì','Kamanri\n\n‰∏Ä‰∏™‰∏™‰∫∫ÁºñÂÜôÂπ∂‰ΩøÁî®ÁöÑÂü∫‰∫é.net Core 3.1ÁöÑÁ±ªÂ∫ì.ÂèØÂú®nuget.org‰∏äËé∑ÂèñÂêåÂêçÁöÑNuGetÂåÖ.\nÂåÖÊã¨:\n\n‰∏Ä‰∏™ËΩªÈáèÁ∫ßÂØπË±°ÂÖ≥Á≥ªÊò†Â∞Ñ(ORM)Ê°ÜÊû∂ -- Kamanri.Da','ORM, WebSocket','2022/2/9 10:09:08');
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts_tags`
--

DROP TABLE IF EXISTS `posts_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `posts_tags` (
  `posts` bigint NOT NULL,
  `tags` bigint NOT NULL,
  `relations` varchar(255) NOT NULL,
  PRIMARY KEY (`posts`,`tags`),
  KEY `PT_FK_P` (`posts`),
  KEY `PT_FK_T` (`tags`),
  CONSTRAINT `posts_tags_ibfk_1` FOREIGN KEY (`posts`) REFERENCES `posts` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `posts_tags_ibfk_2` FOREIGN KEY (`tags`) REFERENCES `tags` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts_tags`
--

LOCK TABLES `posts_tags` WRITE;
/*!40000 ALTER TABLE `posts_tags` DISABLE KEYS */;
INSERT INTO `posts_tags` VALUES (6,2,'{\"Type\":[\"Owned\"]}'),(6,47,'{\"Type\":[\"Owned\"]}'),(16,2,'{\"Type\":[\"Owned\"]}'),(17,2,'{\"Type\":[\"Owned\"]}'),(18,3,'{\"Type\":[\"Owned\"]}'),(19,1,'{\"Type\":[\"Owned\"]}'),(20,1,'{\"Type\":[\"Owned\"]}'),(20,3,'{\"Type\":[\"Owned\"]}'),(24,7,'{\"Type\":[\"Owned\"]}'),(29,4,'{\"Type\":[\"Owned\"]}'),(30,1,'{\"Type\":[\"Owned\"]}'),(31,6,'{\"Type\":[\"Owned\"]}'),(32,2,'{\"Type\":[\"Owned\"]}'),(33,1,'{\"Type\":[\"Owned\"]}'),(33,2,'{\"Type\":[\"Owned\"]}'),(33,16,'{\"Type\":[\"Owned\"]}'),(34,1,'{\"Type\":[\"Owned\"]}'),(35,4,'{\"Type\":[\"Owned\"]}'),(37,47,'{\"Type\":[\"Owned\"]}'),(37,48,'{\"Type\":[\"Owned\"]}');
/*!40000 ALTER TABLE `posts_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `postsinfo`
--

DROP TABLE IF EXISTS `postsinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `postsinfo` (
  `ID` bigint NOT NULL,
  `Content` mediumtext NOT NULL,
  KEY `ID` (`ID`),
  CONSTRAINT `postsinfo_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `posts` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `postsinfo`
--

LOCK TABLES `postsinfo` WRITE;
/*!40000 ALTER TABLE `postsinfo` DISABLE KEYS */;
INSERT INTO `postsinfo` VALUES (6,'<div id=\"context\">\n    \n      <div class=\"mume markdown-preview  margin-center col-md-8\">\n      <h4 class=\"mume-header\" id=\"%E5%A7%94%E6%89%98\">ÂßîÊâò</h4>\n\n<p><strong>ÂßîÊâòÁöÑÁ≤æÈ´ì --- ‰ª•ÂèòÈáè‰Ωú‰∏∫ÊñπÊ≥ï(ÂáΩÊï∞)‰ΩøÁî®,Á±ª‰ºº‰∫éC‰∏≠ÂáΩÊï∞ÊåáÈíà</strong></p>\n<ul>\n<li>Ê≠§Â§ÑÂáΩÊï∞‰∏éÊñπÊ≥ïÊÑè‰πâÁõ∏Âêå,ÁªüÁß∞‰∏∫<strong>ÊñπÊ≥ï</strong></li>\n<li>Ê≠§Â§Ñ\"C\"Êåá <strong>C/C++ËØ≠Ë®Ä</strong></li>\n</ul>\n\n<p>ËøôÈáåÂÖàÂÆö‰πâ‰∏Ä‰∏™ÂëΩÂêçÁ©∫Èó¥,ÈáåÈù¢Êúâ‰∏§‰∏™Á±ª</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n           \n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><p>Áé∞Âú®Ë¶ÅÂú®<code>Program</code>Á±ªÈáå‰ΩøÁî®<code>B</code>Á±ªÈáåÁöÑ<code>Comparor</code>ÊñπÊ≥ï,ËØ•ÊÄé‰πàÂäûÂë¢</p>\n<ol>\n<li>ÂèØ‰ª•Áõ¥Êé•ÂºïÁî®</li>\n</ol>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n           Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span><span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><ol start=\"2\">\n<li>Âà©Áî®ÂßîÊâòÂÆû‰æãÂåñ‰∏Ä‰∏™ÂèòÈáè(Ëøô‰∏™ÂèòÈáèÁöÑÁ±ªÂûãÂêéÈù¢ÂÜçËØ¥)ÊåáÂêëËøô‰∏™ÊñπÊ≥ï,ÂÜç‰ΩøÁî®Ëøô‰∏™ÂèòÈáè</li>\n</ol>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">DelegateComparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Âú®Á±ªÂ§ñÂÆö‰πâÂßîÊâò</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">DelegateComparor</span> comparor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DelegateComparor</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>Comparor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">comparor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><p>ËøôÊ†∑ÂÅöÁöÑÂ•ΩÂ§ÑÊòØÂèØ‰ª•Êõ¥Âä†ÁÅµÊ¥ªÁöÑ‰ΩøÁî®‰∏çÂêåÁ±ªÈáåÁöÑÂêå‰∏ÄÁ±ªÂûãÊñπÊ≥ï.Âπ∂‰∏îÊúâÂà©‰∫éÁªü‰∏ÄËßÑËåÉ.ÈÅøÂÖçÂºïÁî®‰∏çÂΩìÈÄ†ÊàêÁöÑÂºÇÂ∏∏.(ÂÖ∑‰ΩìËßÅÂêéÈù¢)</p>\n<h4 class=\"mume-header\" id=\"func%E4%B8%8Eaction\">Func&lt;&gt;‰∏éAction&lt;&gt;</h4>\n\n<p>ËøòÊòØÂàöÊâçÈÇ£‰∏™Á±ª</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n           \n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><p>Áé∞Âú®ÂõûÂà∞ÂàöÊâçÈÇ£‰∏™ÈóÆÈ¢ò,ÊÄéÊ†∑Âú®<code>Program</code>Á±ªÈáå‰ΩøÁî®<code>B</code>Á±ªÈáåÁöÑ<code>Comparor</code>ÊñπÊ≥ï,Èô§‰∫ÜÂßîÊâò‰πãÂ§ñ?<br>\nÂú®ÂßîÊâòÈÉ®ÂàÜ,Êàë‰ª¨ÂèëÁé∞ÂßîÊâòÂá∫Êù•ÊåáÂêëÊñπÊ≥ïÁöÑÂèòÈáè<code>comparor</code>ÁöÑÁ±ªÂûãÂπ∂Êú™Áõ¥Êé•ËØ¥Êòé,Âè™Âú®ÂßîÊâòÂÆö‰πâ‰∏≠</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">DelegateComparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre><p>ÊâçÂèØÁü•ËøôÊòØ‰∏Ä‰∏™Êúâ‰∏§‰∏™<code>int</code>ÂèÇÊï∞,ËøîÂõûÂÄº‰∏∫<code>int</code>ÁöÑÊñπÊ≥ï.</p>\n<p>ÈÇ£‰πà,Â¶ÇÊûúËÉΩÂ§üÊâæÂà∞ÂÉèC‰∏≠‰∏ÄÊ†∑ÊåáÂêëËØ•Á±ªÂûãÂáΩÊï∞ÁöÑÊåáÈíà(Â¶Ç<code>int (*p)(int,int)</code>)ÁöÑÁ±ªÂûã,Â∞±ÂèØ‰ª•Áõ¥Êé•ÂÆö‰πâËøôÁßçÁ±ªÂûãÁöÑÂèòÈáèÊù•ËµãÂÄº‰∫Ü.</p>\n<p>Âõ†Ê≠§,C#‰∏≠Êèê‰æõ‰∫Ü<code>Func&lt;&gt;</code>Âíå<code>Action&lt;&gt;</code>Êù•Ë°®ËææËøô‰∏Ä\"ÂáΩÊï∞ÊåáÈíà\"Á±ªÂûã</p>\n<p>ÂÆû‰æã:</p>\n<blockquote>\n<p>C# == C<br>\nAction == void (*)() <em>//Êó†ÂèÇÊï∞,Êó†ËøîÂõûÂÄº</em><br>\nAction&lt;T1&gt; == void (*)(T1) <em>//Êúâ‰∏Ä‰∏™ÂèÇÊï∞,Êó†ËøîÂõûÂÄº</em><br>\nAction&lt;T1,T2&gt; == void (*)(T1,T2) <em>//Êúâ‰∏§‰∏™ÂèÇÊï∞,Êó†ËøîÂõûÂÄº</em><br>\nFunc&lt;T&gt; == T (*)() <em>//Êó†ÂèÇÊï∞,ÊúâÂîØ‰∏ÄËøîÂõûÂÄº</em><br>\nFunc&lt;T1,T&gt; == T (*)(T1) <em>//Êúâ‰∏Ä‰∏™ÂèÇÊï∞,Êúâ‰∏Ä‰∏™ËøîÂõûÂÄº</em><br>\nFunc&lt;T1,T2,T&gt; == T (*)(T1,T2) <em>//Êúâ‰∏§‰∏™ÂèÇÊï∞,Êúâ‰∏Ä‰∏™ËøîÂõûÂÄº</em></p>\n</blockquote>\n<p>Âõ†Ê≠§,ÂèØ‰ª•ËøôÊ†∑ÂÆö‰πâ:</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n           <span class=\"token class-name\">Func<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> comparor <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>Comparor<span class=\"token punctuation\">;</span>\n           Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">comparor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><p>ÊØï.</p>\n<h4 class=\"mume-header\" id=\"%E4%BB%8E%E5%87%BD%E6%95%B0%E5%88%B0%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E5%86%8D%E5%88%B0lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F\">‰ªéÂáΩÊï∞Âà∞ÂåøÂêçÂáΩÊï∞ÂÜçÂà∞lambdaË°®ËææÂºè</h4>\n\n<p>ps. ÁúãÊ†áÈ¢òÂ∞±Áü•ÈÅìËøôÊòØ‰∏™ËøõÂåñÁöÑËøáÁ®ã</p>\n<h5 class=\"mume-header\" id=\"%E5%87%BD%E6%95%B0-%E5%88%9D%E7%BA%A7%E5%BD%A2%E6%80%81\">ÂáΩÊï∞---ÂàùÁ∫ßÂΩ¢ÊÄÅ</h5>\n\n<p>‰ªçÁÑ∂ÊòØÂàöÊâçÈÇ£‰∏™Á±ª,ÂÆö‰πâ‰∏Ä‰∏™ListÂ∫èÂàó</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><p>ÂÅáËÆæÁé∞Âú®Ë¶ÅÁªôËøô‰∏™listËøõË°åÊéíÂ∫è,ËØ•ÊÄé‰πàËßÑÂÆöÊòØ‰ªéÂ§ßÂà∞Â∞èËøòÊòØ‰ªéÂ∞èÂà∞Â§ßÂë¢?</p>\n<p>ËøôÂ∞±ÂèØ‰ª•ÈÄöËøáÈÇ£‰∏™<code>Comparor</code>ÊñπÊ≥ïÊù•ÂÜ≥ÂÆö.</p>\n<p>ËæìÂÖ•Â∫èÂàó‰∏≠ÁöÑ‰ªªÊÑèË¶ÅÊØîËæÉÁöÑ‰∏§‰∏™ÂÖÉÁ¥†<code>x</code>,<code>y</code>,Â¶ÇËøîÂõû‰∏∫Ë¥üÂàôÊåâ<code>x -&gt; y</code>Êéí,Âê¶ÂàôÊåâ<code>y -&gt; x</code>Êéí.(ÂÖ∑‰ΩìÊÄé‰πàÊØîËæÉÁî±ÂáΩÊï∞ÂÜÖÈÉ®Ëá™Ë°åÂÆö‰πâ)</p>\n<p><code>List</code>Á±ª‰∏≠ÁöÑ<code>Sort</code>ÊñπÊ≥ïÊé•Âèó‰∏Ä‰∏™<code>Comparison&lt;T&gt;</code>Á±ªÂûãÂèÇÊï∞.ËÄåËøô‰∏™<code>Comparison&lt;T&gt;</code>,Â∞±ÊòØ‰∏Ä‰∏™ÂèØ‰∏î‰ªÖÂèØÊé•Âèó<code>Func&lt;int, int, int&gt;</code>Á±ªÂûãÁöÑÂßîÊâò.</p>\n<p>Âõ†Ê≠§ÊúÄÂàùÁöÑÂÜôÊ≥ï,Âà©Áî®<code>Comparison&lt;T&gt;</code>ÂßîÊâò:</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Comparison<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> comparison <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Comparison<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>Comparor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>comparison<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><p>ÂΩìÁÑ∂‰πüÂèØ‰ª•ÈááÁî®Áõ¥Êé•ÂºïÁî®Ê≥ï:</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\">list<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>Comparor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</pre><p>‰∏çËøáËøôÊ†∑ÂÅöÁöÑÂºäÁ´Ø‰πüÂæàÊòéÊòæ: Â¶ÇÊûúËøô‰∏™<code>B.Comparor</code>ÁöÑÁ±ªÂûã‰∏ç‰∏∫<code>Func&lt;int,int,int&gt;</code> Â∞±‰ºöÂºïÂèëÂºÇÂ∏∏,‰πü‰∏çÂà©‰∫éËßÑËåÉ.ÂßîÊâòÁöÑÂ•ΩÂ§ÑÂ∞±Âú®‰∫é<strong>ÁªôÊåáÂêëÂáΩÊï∞ÁöÑÂèòÈáèÂÅöÂá∫ËßÑËåÉ</strong>.</p>\n<p>ÊúÄÂêé,ËøôÈáå‰∏çÂ¶®ÁÆÄÂåñ,ÂéªÊéâÂÆö‰πâÁöÑ<code>Comparison&lt;T&gt;</code>ÂßîÊâòÁ±ªÂûãÂèòÈáè.</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Comparison<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>Comparor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Comparor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><h5 class=\"mume-header\" id=\"%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0-%E4%B8%AD%E7%BA%A7%E5%BD%A2%E6%80%81\">ÂåøÂêçÂáΩÊï∞---‰∏≠Á∫ßÂΩ¢ÊÄÅ</h5>\n\n<p>ÂèëÁé∞Âà∞ËøôÈáå<code>B</code>‰∏≠ÁöÑ<code>Comparor</code>ÊñπÊ≥ïÂè™Áî®‰∫Ü‰∏ÄÊ¨°,Âç¥ÈúÄË¶Å‰∏ìÈó®ÂÆö‰πâ‰∏Ä‰∏™Êñ∞ÁöÑÁ±ªÂíåÊñπÊ≥ï,</p>\n<p>‰∏§‰∏™Â≠ó,<strong style=\"color:red;\">ÁπÅÁêê!</strong></p>\n<p>‰∫éÊòØÂêéÊù•ÂèØ‰ª•Áî®<code>delegate</code>ÂÖ≥ÈîÆÂ≠ó,<code>delegate(){}</code>Êù•ÂÆö‰πâÂåøÂêçÊñπÊ≥ï,ÊâÄË∞ìÂåøÂêçÊñπÊ≥ïÂ∞±ÊòØÊ≤°ÂêçÂ≠óÁöÑÊñπÊ≥ï,‰∏ÄÊ∞îÂëµÊàêÁöÑÂÆö‰πâÂíå‰ΩøÁî®,Áî®ÂÆåÂç≥‰∏¢ÂºÉ.</p>\n<p>ËøôÈáåÁî®ÂåøÂêçÂáΩÊï∞Êù•ÈáçÂÜô:</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Comparison<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">delegate</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><h5 class=\"mume-header\" id=\"lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E6%9C%80%E7%BB%88%E5%BD%A2%E6%80%81\">lambdaË°®ËææÂºè---ÊúÄÁªàÂΩ¢ÊÄÅ</h5>\n\n<p>‰∏äÈù¢ÁöÑÂåøÂêçÂáΩÊï∞Â∑≤ÁªèÂÅöÂá∫‰∫Ü‰∏ÄÂÆöÁ®ãÂ∫¶ÁöÑÁÆÄÂåñ,‰ΩÜÊòØÊú®Â§ßÊú®Â§ßÊú®Â§ßÊú®Â§ßËøò‰∏çÂ§üÁÆÄÂçï!!!</p>\n<p>ÊúâÊõ¥ÁÆÄÂçïÁöÑ!!!</p>\n<p>ÊúâÊõ¥ÁÆÄÂçïÁöÑ!!!</p>\n<p>ÊúâÊõ¥ÁÆÄÂçïÁöÑ!!!</p>\n<p>ÈáçË¶ÅÁöÑ‰∫ãÊÉÖËØ¥‰∏âÈÅçÊÄï‰Ω†Âê¨‰∏çÊ∏Ö</p>\n<p>ÂΩìÂßîÊâòÈáåÁöÑÂèòÈáèÁ±ªÂûãÊòéÁ°ÆÊó∂(ÊØîÂ¶ÇËøôÈáå<code>Conparison&lt;int&gt;</code>Â∞±ËßÑÂÆö‰∫Ü‰∏ÄÂÆöÊòØ<code>int</code>),ÂåøÂêçÂáΩÊï∞ÂèØ‰ª•ÈááÁî®‰∏ÄÁßçÂÖ®Êñ∞ÁöÑ‰π¶ÂÜôÊñπÂºè:<code>()=&gt;</code>,Âç≥lambdaË°®ËææÂºè.</p>\n<p>ËøôÈáåÁî®lambdaË°®ËææÂºèÊù•ÈáçÂÜô:</p>\n<pre data-role=\"codeBlock\" data-info=\"cs\" class=\"language-csharp\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ConsoleApp2</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Comparison<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</pre><ul>\n<li>ÂΩìÂè™Êúâ‰∏Ä‰∏™ÂèÇÊï∞Êó∂,<code>()</code>ÂèØÁúÅÁï•</li>\n<li>ÂΩìÂêéÈù¢ÁöÑË°®ËææÂºèË∂ÖËøá‰∏ÄÂè•Êó∂,ÈúÄÁî®Â§ßÊã¨Âè∑Êã¨Ëµ∑</li>\n</ul>\n<p>ÊúÄÁÆÄÂçïÂΩ¢ÂºèÂΩ¢Êàê!</p>\n<p>ÊúÄÂêéÊéíÂ∫èÁªìÊûú:</p>\n<blockquote>\n<p>1<br>\n2<br>\n3</p>\n</blockquote>'),(16,'<p>tehbergerththngbfdbgnerhbrgrgrgrdbgnnuyiktyjmyfjtdjtdhd</p>'),(17,'<p><a data-cke-saved-href=\"https://github.com/ryankamanri\" href=\"https://github.com/ryankamanri\">ÊàëÁöÑGitHub</a></p><hr><h2 style=\"font-style:italic\"><strong>ÊàëÁöÑGitHub</strong></h2><h3 style=\"color:#aaaaaa; font-style:italic\"><em>ÊàëÁöÑGitHub</em></h3><div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><s>ÊàëÁöÑGitHub</s></div><blockquote><p>ÊàëÁöÑGitHub</p></blockquote><p><br></p>'),(18,'<p>123123123123123</p>'),(19,'<p>3485345343483456486486483</p>'),(20,'<p>ÂïäÂï¶Âï¶Âï¶Âï¶Âï¶ÂïäÂï¶Âï¶Âï¶Âï¶Âï¶</p><p>Âì¶‰∏çÈîô</p>'),(23,'<p><strong>Âú®ÁºñÁ®ãÂ±äÊúâ‰∏™ÂÖ±ËØÜÔºåÊÉ≥Ë¶ÅÊàê‰∏∫‰∏Ä‰∏™ÂêàÊ†ºÁöÑÁ®ãÂ∫èÂëòÂøÖÈ°ªË¶ÅÊéåÊè° GitHub ÁöÑÁî®Ê≥ïÔºÅ</strong></p><p><img data-cke-saved-src=\"https://pic2.zhimg.com/80/v2-ddef4098eac5654451aa4d9c68c656e9_720w.jpg\" src=\"https://pic2.zhimg.com/80/v2-ddef4098eac5654451aa4d9c68c656e9_720w.jpg\" width=\"1920\"></p><p>Êé•‰∏ãÊù•ÔºåÊàë‰ª¨Áî®‰∏§‰∏áÂ≠óÂä†‰∏ÄÁôæÂº†ÂõæÁâá‰ªéÂ§¥Âà∞Â∞æÁöÑÁªô‰Ω†‰ªãÁªç GitHub ÁöÑÂÖ∑‰Ωì‰ΩøÁî®ÔºåÈÄöËøáËøô‰∏™ GitHub ÊïôÁ®ãÔºåËÆ©‰Ω†ÊéåÊè° GitHub ÁöÑ‰ΩøÁî®ÊñπÊ≥ï„ÄÇ</p><p><a data-cke-saved-href=\"https://zhuanlan.zhihu.com/p/369486197\" data-cke-pa-onclick=\"window.open(this.href, \'\', \'resizable=yes,status=yes,location=yes,toolbar=yes,menubar=yes,fullscreen=yes,scrollbars=yes,dependent=yes\'); return false;\" href=\"https://zhuanlan.zhihu.com/p/369486197\">ÂéüÊñáÈìæÊé•</a><br></p>'),(24,'<h2>ÂÆö‰πâÂíåÁî®Ê≥ï</h2><p>contenteditable Â±ûÊÄßËßÑÂÆöÊòØÂê¶ÂèØÁºñËæëÂÖÉÁ¥†ÁöÑÂÜÖÂÆπ„ÄÇ</p><h2>HTML 4.01 ‰∏é HTML 5 ‰πãÈó¥ÁöÑÂ∑ÆÂºÇ</h2><p>contenteditable Â±ûÊÄßÊòØ HTML5 ‰∏≠ÁöÑÊñ∞Â±ûÊÄß„ÄÇ</p><h2>ËØ≠Ê≥ï</h2><div style=\"background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;\">&lt;<em>element</em> contenteditable=\"<em>value</em>\"&gt;</div><h3>Â±ûÊÄßÂÄº</h3><table class=\" cke_show_border\"><tbody><tr><th>ÂÄº</th><th>ÊèèËø∞</th></tr><tr><td>true</td><td>ËßÑÂÆöÂèØ‰ª•ÁºñËæëÂÖÉÁ¥†ÂÜÖÂÆπ„ÄÇ</td></tr><tr><td>false</td><td>ËßÑÂÆöÊó†Ê≥ïÁºñËæëÂÖÉÁ¥†ÂÜÖÂÆπ„ÄÇ</td></tr><tr><td><em>classname</em></td><td>ÁªßÊâøÁà∂ÂÖÉÁ¥†ÁöÑ contenteditable Â±ûÊÄß„ÄÇ</td></tr></tbody></table>'),(29,'\"<blockquote><p>Êó†È°ªÊãÖÂøÉÔºåÊòéÂ§©Êó©‰∏äÁâõÂ•∂Ëøò‰ºöÊîæÂú®Èó®ÂâçÁöÑÂè∞Èò∂‰∏äÔºå„ÄäÊñ∞ÊîøÊ≤ªÂÆ∂Êä•„Äã‰πü‰ºöÁÖßÂ∏∏Âá∫Áâà„ÄÇ<br>‚Äî‚ÄîGeorge&nbsp;Orwell<br></p></blockquote><p>ÂêëÂ§ñÁúãÁöÑÊòØÊ¢¶‰∏≠‰∫∫ÔºåÂêëÂÜÖÁúãÁöÑÊòØÊ∏ÖÈÜíËÄÖ„ÄÇ<br>ÂêëÂÜÖÁúãËÄÖÔºåÂîØËá™ÊàëÊÑèËØÜËßâÈÜí‰πã‰∫∫„ÄÇ<br>ÂÜçÁªöÁÉÇÁöÑ‰∏ñÁïåÔºå‰πüÂè™‰∏çËøáÊòØÂÜÖÂøÉÁöÑ‰∏ÄÈÅìË£ÖÈ•∞„ÄÇ<br>ÊîØËµ∑ÂÜÖÂøÉËøôÂ†µÂ¢ôÁöÑÔºåÊòØÈöèÁùÄÊó∂Èó¥ÁöÑÊµÅÈÄùÔºå‰∏ÄÁÇπ‰∏ÄÁÇπÁßØÁ¥ØËµ∑Êù•ÁöÑÂùöÊåÅ„ÄÇ&nbsp;</p><div style=\"background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;\">&nbsp;Ôºà‰ªÖ‰ª£Ë°®‰∏™‰∫∫ËßÇÁÇπÔºå‰∏çÂñúÂãøÂñ∑ÔºåÂπ∂Êó†Âò≤Á¨ëÂíåËÆΩÂà∫ÁöÑÊÑèÂë≥ÔºåÂ¶ÇÊûúÊúâÂì™ÈáåËØ≠Ë®Ä‰∏çÂΩìÔºåÊàñÊúâË®ÄËÆ∫ÂÜíÁäØÊä±Ê≠âÔºåÂè™ÊòØÂçïÁ∫ØÁöÑËßâÂæóÔºåËØ∑Êù†Á≤æËøúÁ¶ªÔºåÂè¶Â§ñÊàëÁà∂ÊØçËøòÂÅ•Âú®Ôºå‰∏çÊòØÂ≠§ÂÑøÔºåÂèóËøáÊïôËÇ≤ÔºåÈùûÊù†ÈùûÈªëÔºåÂπ∂Êó†ÊïåÊÑèÔºå‰ªÖË°®ËææÂ≠óÈù¢Âê´‰πâÊó†ËÆΩÂà∫„ÄÅÊöóÁ§∫ÊÑèÂë≥ÔºåÂπ∂Êó†ÊÑèÂºïÂèëËÆ∫ÊàòÔºåËØ≠Ë®Ä‰∏çÂΩì‰πãÂ§ÑËØ∑ËßÅË∞ÖÔºåÊú¨‰∫∫Â∞äÈáç‰∏ÄÂàáÔºåËã•Êú¨ÂõûÂ§çÂÜíÁäØÂà∞ÊÇ®ÊàëËØöÊåöË°®Á§∫Ê≠âÊÑèÔºåËã•ÊÇ®‰∏çËµûÂêåÊàëÁöÑËßÇÁÇπ‰∏çÂøÖÁâπÂú∞ÂõûÂ§çÊàë)<br></div>\"'),(30,'\"<blockquote><p>Ôºà‰ªÖ‰ª£Ë°®‰∏™‰∫∫ËßÇÁÇπÔºå‰∏çÂñúÂãøÂñ∑ÔºåÂπ∂Êó†Âò≤Á¨ëÂíåËÆΩÂà∫ÁöÑÊÑèÂë≥ÔºåÂ¶ÇÊûúÊúâÂì™ÈáåËØ≠Ë®Ä‰∏çÂΩìÔºåÊàñÊúâË®ÄËÆ∫ÂÜíÁäØÊä±Ê≠âÔºåÂè™ÊòØÂçïÁ∫ØÁöÑËßâÂæóÔºåËØ∑Êù†Á≤æËøúÁ¶ªÔºåÂè¶Â§ñÊàëÁà∂ÊØçËøòÂÅ•Âú®Ôºå‰∏çÊòØÂ≠§ÂÑøÔºåÂèóËøáÊïôËÇ≤ÔºåÈùûÊù†ÈùûÈªëÔºåÂπ∂Êó†ÊïåÊÑèÔºå‰ªÖË°®ËææÂ≠óÈù¢Âê´‰πâÊó†ËÆΩÂà∫„ÄÅÊöóÁ§∫ÊÑèÂë≥ÔºåÂπ∂Êó†ÊÑèÂºïÂèëËÆ∫ÊàòÔºåËØ≠Ë®Ä‰∏çÂΩì‰πãÂ§ÑËØ∑ËßÅË∞ÖÔºåÊú¨‰∫∫Â∞äÈáç‰∏ÄÂàáÔºåËã•Êú¨ÂõûÂ§çÂÜíÁäØÂà∞ÊÇ®ÊàëËØöÊåöË°®Á§∫Ê≠âÊÑèÔºåËã•ÊÇ®‰∏çËµûÂêåÊàëÁöÑËßÇÁÇπ‰∏çÂøÖÁâπÂú∞ÂõûÂ§çÊàë)<br><br></p></blockquote>\"'),(31,'<p>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</p>'),(32,'<h2>Format in kotlin string templates</h2><p>KotlinÊúâ‰∏Ä‰∏™ÂæàÊ£íÁöÑÂäüËÉΩÂè´ÂÅöÂ≠óÁ¨¶‰∏≤Ê®°Êùø„ÄÇ ÊàëÂæàÂñúÊ¨¢„ÄÇ</p><table cellspacing=\"0\" cellpadding=\"0\" class=\" cke_show_border\"><tbody><tr><td><p>1<br>2</p></td><td><p>&nbsp;val i = 10<br>&nbsp;val s =\"i = $i\" // evaluates to\"i = 10\"</p></td></tr></tbody></table><p>‰ΩÜÊòØÊ®°Êùø‰∏≠ÊòØÂê¶ÂèØ‰ª•Êúâ‰ªª‰ΩïÊ†ºÂºèÔºü ‰æãÂ¶ÇÔºåÊàëÊÉ≥Âú®kotlin‰∏≠Â∞ÜÂ≠óÁ¨¶‰∏≤Ê®°Êùø‰∏≠ÁöÑDoubleÊ†ºÂºèÂåñÔºåËá≥Â∞ëÂú®Â∞èÊï∞ÂàÜÈöîÁ¨¶ÂêéËÆæÁΩÆ‰∏Ä‰∫õÊï∞Â≠óÔºö</p><table cellspacing=\"0\" cellpadding=\"0\" class=\" cke_show_border\"><tbody><tr><td><p>1<br>2</p></td><td><p>val pi = 3.14159265358979323<br>val s =\"pi = $pi??\" // How to make it\"pi = 3.14\"?</p></td></tr></tbody></table><hr><p>ÈÅóÊÜæÁöÑÊòØÔºåÂØπ‰∫éÂ≠óÁ¨¶‰∏≤Ê®°Êùø‰∏≠ÁöÑÊ†ºÂºèÂåñÊ≤°ÊúâÂÜÖÁΩÆÊîØÊåÅÔºå‰Ωú‰∏∫‰∏ÄÁßçËß£ÂÜ≥ÊñπÊ≥ïÔºåÊÇ®ÂèØ‰ª•‰ΩøÁî®‰ª•‰∏ãÂÜÖÂÆπÔºö</p><table cellspacing=\"0\" cellpadding=\"0\" class=\" cke_show_border\"><tbody><tr><td><p>1</p></td><td><p>\"pi = ${pi.format(2)}\"</p></td></tr></tbody></table><p>.format(n)ÂáΩÊï∞Ôºå‰Ω†ÈúÄË¶ÅÂ∞ÜËá™Â∑±ÂÆö‰πâ‰∏∫</p><table cellspacing=\"0\" cellpadding=\"0\" class=\" cke_show_border\"><tbody><tr><td><p>1</p></td><td><p>fun Double.format(digits: Int) = java.lang.String.format(\"%.${digits}f\", this)</p></td></tr></tbody></table><p>ÁõÆÂâçKotlinÊòæÁÑ∂Áº∫Â∞ë‰∏Ä‰∫õÂäüËÉΩÔºåÊàë‰ª¨Â∞Ü‰øÆÂ§çÂÆÉ„ÄÇ</p>'),(33,'<table class=\" cke_show_border\"><thead><tr><th>Êï∞ÊçÆÂ∫ì</th><th>ÂØπÂ∫îJavaÁ±ªÔºàÊóßÔºâ</th><th>ÂØπÂ∫îJavaÁ±ªÔºàÊñ∞Ôºâ</th></tr></thead><tbody><tr><td>DATETIME</td><td>java.util.Date</td><td>LocalDateTime</td></tr><tr><td>DATE</td><td>java.sql.Date</td><td>LocalDate</td></tr><tr><td>TIME</td><td>java.sql.Time</td><td>LocalTime</td></tr><tr><td>TIMESTAMP</td><td>java.sql.Timestamp</td><td>LocalDateTime</td></tr></tbody></table>'),(34,'<p>Âä†Â•ΩÂèã<br></p>'),(35,'<p>dd</p>'),(36,'<p>123456</p>'),(37,'<h1>Kamanri</h1><p>‰∏Ä‰∏™‰∏™‰∫∫ÁºñÂÜôÂπ∂‰ΩøÁî®ÁöÑÂü∫‰∫é<code>.net Core 3.1</code>ÁöÑÁ±ªÂ∫ì.ÂèØÂú®<a data-cke-saved-href=\"https://www.nuget.org/\" href=\"https://www.nuget.org/\">nuget.org</a>‰∏äËé∑ÂèñÂêåÂêçÁöÑNuGetÂåÖ.<br>ÂåÖÊã¨:</p><ul><li><strong>‰∏Ä‰∏™ËΩªÈáèÁ∫ßÂØπË±°ÂÖ≥Á≥ªÊò†Â∞Ñ(ORM)Ê°ÜÊû∂ -- Kamanri.Database</strong></li><li><strong>‰∏Ä‰∏™‰∫ã‰ª∂È©±Âä®ÂûãÁΩëÁªúÂ•óÊé•Â≠ó(WebSocket)Ê°ÜÊû∂ -- Kamanri.WebSockets</strong></li><li>‰∏ÄÂ•óÂØπHTTPËØ∑Ê±ÇÁöÑÂ∞ÅË£Ö -- Kamanri.Http</li><li>‰∏Ä‰∫õÂ∑•ÂÖ∑Á±ª(Â¶ÇÈöèÊú∫IDÁîüÊàêÁ±ªÔºå‰∫íÊñ•ÈîÅÁ±ªÁ≠âÁ≠â) -- Kamanri.Self</li></ul><hr><p><br></p><h2>1. Kamanri.Database</h2><p><br></p><h3>1.1 ÁÆÄ‰ªã</h3><p>Â¶ÇÂâçÊñáÊâÄËø∞ÔºåËøôÊòØ‰∏Ä‰∏™<strong>ËΩªÈáèÁ∫ßÂØπË±°ÂÖ≥Á≥ªÊò†Â∞Ñ(ORM)Ê°ÜÊû∂</strong>.<br>‰ºóÊâÄÂë®Áü•ÔºåORMÊ°ÜÊû∂ÊòØÊåáËÉΩÂ§üÂ∞ÜÊï∞ÊçÆÂ∫ì‰∏≠ÁöÑË°®‰∏éÈù¢ÂêëÂØπË±°ËØ≠Ë®Ä‰∏≠ÁöÑÂØπË±°‰∫íÁõ∏ÁªëÂÆöÂπ∂Êèê‰æõ‰∏ÄÂÆöÊï∞ÊçÆÂ∫ìÊìç‰ΩúËÉΩÂäõÁöÑ‰∏ÄÂ•óËß£ÂÜ≥ÊñπÊ°à.<br>Êú¨Ê°ÜÊû∂ËÆæËÆ°ÁöÑÂá∫ÂèëÁÇπ‰ª•ÂèäÂå∫Âà´‰∫éÂÖ∂‰ªñÁöÑÂ∏∏ËßÅÁöÑORMÊ°ÜÊû∂Âú®‰∫éÔºåÂÆÉÂèØ‰ª•Âü∫‰∫é‰∏§Á±ªÂÆû‰Ωì‰πãÈó¥ÁöÑÂÖ≥Á≥ªÊü•ËØ¢(ÊØîËæÉÊé®ËçêËøô‰πàÂÅö)Ôºå‰πüÂèØ‰ª•Áõ¥Êé•Âü∫‰∫éSQL selectionÊü•ËØ¢.Êú¨Ê°ÜÊû∂‰πü‰øùÁïô‰ΩøÁî®ËÄÖÁõ¥Êé•‰ΩøÁî®sqlÊù•Êìç‰ΩúÊï∞ÊçÆÂ∫ìÁöÑËÉΩÂäõ.<br>Êú¨Ê°ÜÊû∂ËÆæËÆ°ÁöÑÊ†∏ÂøÉ‰∏∫Âü∫‰∫éÂÖ≥Á≥ªË°®‰∏≠ÂÖ≥Á≥ªÁöÑÊü•ËØ¢.‰ΩøÁî®ËÄÖÂèØ‰ª•Âú®‰∏§‰∏™ÂÆû‰Ωì‰πãÈó¥Ëµã‰∫à‰ªªÊÑèÂΩ¢ÂºèÁöÑÂÖ≥Á≥ªÔºåÂπ∂ÈÄöËøáÊ°ÜÊû∂ÂÜÖÁΩÆÁöÑÊñπÊ≥ïÊù•Êü•ËØ¢.<br>Êú¨Ê°ÜÊû∂Âü∫‰∫é<code>ASP .net Core</code>.<br>Âè¶Â§ñÔºåÊú¨Ê°ÜÊû∂ÁõÆÂâçÂè™ÈÄÇÁî®‰∫éÂÖ≥Á≥ªÂûãÊï∞ÊçÆÂ∫ìÔºåÂπ∂‰∏îÈúÄË¶ÅÈ°πÁõÆËá™Ë°åÊèê‰æõÂà∞ÂØπÂ∫îÊï∞ÊçÆÂ∫ìÁöÑÈ©±Âä®ÂåÖ(Â¶ÇMysql.Data).</p><p><br></p><h3>1.2 ‰ΩøÁî®ÊñπÊ≥ï</h3><p><br></p><p>1.2.1 ÂáÜÂ§á</p><ol><li>Âú®<code>ASP .net Core</code>È°πÁõÆ‰∏≠ÁöÑ<code>Startup.cs</code>ÂºïÂÖ•Ê°ÜÊû∂ÁöÑÊúçÂä°:</li></ol><p>Startup.cs</p><p><br></p><pre>using XXX;\n\nnamespace XXX\n{\n	public class Startup\n	{\n		\n		public void ConfigureServices(IServiceCollection services)\n		{\n            ...\n			\n			services.AddKamanriDataBase(options =&gt;\n			{\n				options.Server = Configuration[\"SQL:Server\"];\n				options.Port = Configuration[\"SQL:Port\"];\n				options.Database = Configuration[\"SQL:Database\"];\n				options.Uid = Configuration[\"SQL:Uid\"];\n				options.Pwd = Configuration[\"SQL:Pwd\"];\n\n			}, options =&gt; new MySql.Data.MySqlClient.MySqlConnection(options));\n\n            ...\n\n		}\n	}\n}\n\n</pre><p>‰Ω†ÂèØ‰ª•Áõ¥Êé•Â∞ÜÈÖçÁΩÆÂ°´ÂÜôÂú®<code>Startip.cs</code>‰∏≠, ‰∏çËøá‰∏∫‰∫Ü‰æø‰∫éÂêéÁª≠ÁöÑÈÉ®ÁΩ≤‰∏éÈÖçÁΩÆ, ÈÄöÂ∏∏Êõ¥Âª∫ËÆÆËøôÈáåÈááÁî®ÁöÑ<strong>jsonÈÖçÁΩÆÈ°πËΩΩÂÖ•</strong>.<br>Ê≠§Êó∂È°πÁõÆÁöÑ<code>appsettings.json</code>Â∫îÂΩìÈÖçÁΩÆ‰∏∫:</p><p><br></p><pre>{\n  ...\n\n  \"SQL\":{\n	\"Server\": ${Server IP},\n	\"Port\": ${Server Port},\n	\"Database\": ${Server Database Name},\n	\"Uid\": ${Database User Id},\n	\"Pwd\": ${Database User Password}\n  }\n  ...\n}\n</pre><ol><li>Ëá™Ë°å‰∏∫ÂØπÂ∫îÁöÑÊï∞ÊçÆÂ∫ìËÆæÁΩÆÂÆû‰ΩìË°®ÂíåÂÖ≥Á≥ªË°®.<br>ËÆæÁé∞Êúâ‰∏§ÁßçÂÆû‰ΩìAÂíåB, ÈúÄË¶ÅÂª∫Á´ãËøô‰∏§ÁßçÂÆû‰ΩìÁöÑÂÆû‰ΩìË°®Âíå‰ªñ‰ª¨ÁöÑÂÖ≥Á≥ªË°®.<br>Ê≥®ÊÑèÂØπ‰∫éÂÆû‰ΩìA(Ë°®Âêç‰∏∫<code>ta</code>)ÂíåÂÆû‰ΩìB(Ë°®Âêç‰∏∫<code>tb</code>)ÁöÑÂÖ≥Á≥ªË°®,ÂÖ∂Ê†ºÂºè‰∏•Ê†ºËßÑÂÆö‰∏∫Â¶Ç‰∏ã:</li></ol><p><br></p><pre>create table ta_tb(\n	ta bigint not null,\n    tb bigint not null,\n    relations varchar(255) not null,\n	primary key (ta, tb),\n    foreign key FK_TA (ta) references ta(ID),\n    foreign key FK_TB (tb) references tb(ID)\n);\n</pre><p>ÂØπÂ∫îÁöÑÂÆû‰ΩìAÂíåÂÆû‰ΩìBÈúÄË¶ÅÊúâ‰∏Ä‰∏™Âêç‰∏∫IDÁöÑËá™Â¢û‰∏ªÈîÆ:</p><p><br></p><pre>create table ta(\n	ID bigint auto_increment primary key,\n    p1 varchar(255)\n);\ncreate table tb(\n	ID bigint auto_increment primary key,\n    p2 varchar(255)\n);\n</pre><ol><li>Âú®È°πÁõÆ‰∏≠Êñ∞Âª∫ModelsÊñá‰ª∂Â§π, Âπ∂Âú®ÂÖ∂‰∏ãÊñ∞Âª∫<code>class A</code>Âíå<code>class B</code>‰Ωú‰∏∫‰∏§ÁßçÂÆû‰ΩìÁöÑÂØπË±°Ê®°Âûã:</li></ol><p><br></p><pre>...\n    public class A\n	{\n		public string p1 { get; set; }\n	}\n...\n    public class B\n	{\n		public int p2 { get; set; }\n	}\n...\n</pre><ul><li>Ê≥®ÊÑèËøôÈáå‰∏ÄÂÆöË¶ÅÊääÂÆû‰Ωì‰∏≠ÁöÑÂ±ûÊÄß<strong>‰ª•Â±ûÊÄßÁöÑÊñπÂºèÂÆö‰πâ</strong>(ËÉΩÈÄöËøáType.GetProperties()Ëé∑Âèñ), Âê¶ÂàôÊó†Ê≥ïËØÜÂà´.</li></ul><ol><li>ËÆ©ÂÆÉ‰ª¨</li></ol><ul><li>ÁªßÊâø&nbsp;<code>Kamanri.Database.Models.Entity&lt;TEntity&gt;</code>&nbsp;Á±ª.</li><li>ÈáçÂÜô<code>GetEntityFromDataReader</code>Âíå<code>GetEntity</code>‰∏§‰∏™ÊñπÊ≥ï.</li></ul><blockquote><ul><li><code>GetEntityFromDataReader</code>ÊñπÊ≥ïÁî®‰∫é‰ªéÊï∞ÊçÆÂ∫ìËøîÂõûÁöÑÊï∞ÊçÆËØªÂèñÂô®<code>DbDataReader</code>‰∏≠ÂèñÂá∫ÂØπÂ∫îÁöÑÂÆû‰Ωì.</li><li><code>GetEntity</code>ÊñπÊ≥ïÁî®‰∫é‰ªéÊú¨ÂÆû‰ΩìÊäΩË±°Á±ªÁöÑÁ±ªÂÆû‰æã‰∏≠Ëé∑ÂèñÂÆû‰Ωì, Áªü‰∏ÄËøîÂõûthisÂç≥ÂèØ.</li></ul></blockquote><ul><li>ÈáçÂÜô<code>TableName</code>Â±ûÊÄß, ËµãÂÄº‰∏∫ÂØπÂ∫îÁöÑÊï∞ÊçÆÂ∫ìË°®Âêç.</li><li>‰∏∫ÊØè‰∏™ÂÆû‰ΩìÂ±ûÊÄßÊ∑ªÂä†ÈÄÇÂΩìÁöÑËá™ÂÆö‰πâÂ±ûÊÄß(Â¶Ç<code>ColumnName</code>‰∏∫ÂØπÂ∫îÁöÑÊï∞ÊçÆÂ∫ìÂàóÂêç).</li></ul><p><br></p><pre>using System.Data.Common;\nusing Kamanri.Database.Models;\nusing Kamanri.Database.Models.Attributes;\n...\n    public class A : Entity&lt;A&gt;\n	{\n        [ColumnName(\"p1\")]\n		public string P1 { get; set; }\n\n        public override string TableName { get; set; } = \"t1\";\n\n        public override A GetEntity() =&gt; this;\n\n		public override A GetEntityFromDataReader(DbDataReader ddr) =&gt;\n			new A()\n			{\n				P1 = (string)ddr[\"p1\"]\n			};\n	}\n...\n    public class B : Entity&lt;B&gt;\n	{\n		[ColumnName(\"p2\")]\n		public int P2 { get; set; }\n\n        public override string TableName { get; set; } = \"t2\";\n\n        public override B GetEntity() =&gt; this;\n\n		public override B GetEntityFromDataReader(DbDataReader ddr) =&gt;\n			new B()\n			{\n				P2 = (string)ddr[\"p2\"]\n			};\n	}\n...\n</pre><ol><li>Âú®Ë¶Å‰ΩøÁî®ÂÆû‰ΩìÊ°ÜÊû∂ÁöÑÁ±ª‰∏≠ÈÄöËøáÊûÑÈÄ†ÂáΩÊï∞Ê≥®ÂÖ•<code>DatabaseContext</code>Á±ª.</li></ol><p><br></p><pre>public class Service1\n{\n    private readonly DatabaseContext _dbc;\n\n    public UserService(DatabaseContext dbc, TagService tagService)\n	{\n		_dbc = dbc;\n	}\n}\n</pre><p><br></p><p>1.2.2 ÁÆÄÂçïÁöÑÊìç‰Ωú</p><p><br></p><p>ÁÆÄÂçïÁöÑÂ¢ûÂà†ÊîπÊü•</p><ul><li>ÊèíÂÖ•A</li></ul><p><br></p><pre>var a = new A()\n{\n    P1 = \"XXX\"\n};\n\nawait _dbc.Insert&lt;A&gt;(a);\n// ÊãøÂà∞Êï∞ÊçÆÂ∫ìÂàÜÈÖçÁöÑID‰ª•ËøõË°åÂêéÁª≠Êìç‰Ωú\nvar ID = await _dbc.SelectID&lt;A&gt;(a);\n\n// Â∞ÜÂ∑≤ÁªèÂàÜÈÖçÂà∞IDÁöÑÂÆû‰ΩìÊèíÂÖ•\nawait _dbc.InsertWithID(a);\n</pre><ul><li>Âà†Èô§A</li></ul><p><br></p><pre>await _dbc.Delete&lt;A&gt;(a);\n</pre><ul><li>‰øÆÊîπA</li></ul><p><br></p><pre>a.P1 = \"XXX\";\nawait _dbc.Update&lt;A&gt;(a);\n</pre><ul><li>Êü•ËØ¢A</li></ul><p><br></p><pre>// Ê†πÊçÆIDÊü•ËØ¢ÂÖ∂‰ªñÊï∞ÊçÆ\nawait _dbc.Select&lt;A&gt;(a);\n// Ê†πÊçÆÂÄôÈÄâÁ†ÅÊü•ËØ¢ID\nvar ID = await _dbc.SelectID&lt;A&gt;(a);\n// Êü•ËØ¢ÊâÄÊúâ\nvar allAList = await _dbc.SelectAll&lt;A&gt;();\n// ‰ΩøÁî®SQLÊü•ËØ¢\nvar aList = await _dbc.SelectCustom&lt;A&gt;(\"P1 = \'XXX\'\");\n</pre><p>‰ªñ‰ª¨‰πüÊúâÂØπÂ∫îÁöÑÈõÜÂêàÊñπÊ≥ï<code>Inserts</code>,<code>InsertsWithID</code>,<code>Deletes</code>,<code>Selects</code>Âíå<code>SelectIDs</code>,Ê≠§Êó∂ËæìÂÖ•ÂØπË±°Âèò‰∏∫‰∫ÜÈõÜÂêà.</p><p><br></p><p>ÁªìÂêàÂÆû‰ΩìÂÖ≥Á≥ªÁöÑÊü•ËØ¢</p><p>‰æãÂ¶Çta_tbË°®‰∏≠ÊúâÂ¶Ç‰∏ãË°å:</p><table class=\" cke_show_border\"><tbody><tr><td>ta</td><td>tb</td><td>relations</td></tr><tr><td>1</td><td>2</td><td>{\"Type\": [\"R1\"]}</td></tr></tbody></table><p>ÂàôË°®Á§∫ID‰∏∫1ÁöÑAÂÆû‰ΩìÂíåID‰∏∫2ÁöÑBÂÆû‰ΩìÂ≠òÂú®<strong>ÈîÆ‰∏∫Type, ÂÄº‰∏∫R1</strong>ÁöÑÂÖ≥Á≥ª.</p><p>ÂèØ‰ª•ÈÄöËøáA‰∏éÂØπÂ∫îÁöÑÂÖ≥Á≥ªÊâæÂà∞B:</p><p><br></p><pre>var a = new A()\n{\n    ID = 1\n};\n\nvar bList = _dbc.MappingSelect&lt;A, B&gt;(\n    a,\n    ID_IDList.OutPutType.Value,\n    selection =&gt; selection.Type = new List&lt;string&gt;(){ \"R1\" }\n);\n</pre><p>‰∏äËø∞ËØ≠Âè•ÂèØ‰ª•Â∞ÜÊâÄÊúâÁöÑ<code>ta</code>Âàó‰∏∫1,&nbsp;<code>relations</code>‰∏≠ÈîÆ‰∏∫<code>Type</code>ÁöÑÂÄºÂåÖÊã¨<code>R1</code>ÁöÑÊâÄÊúâtbÂØπÂ∫îÁöÑÂÆû‰ΩìÂàóÂá∫.</p><ul><li><code>ID_IDList.OutPutType.Value</code>&nbsp;Ë°®Á§∫ËæìÂá∫ÂÆû‰ΩìÁöÑÁ±ªÂûã(B)Âú®ÂÖ≥Á≥ªË°®‰∏≠ÁöÑ‰ΩçÁΩÆ(tb)‰∏∫\"ÂÄº\", Âç≥Á¨¨‰∫å‰Ωç. Ëã•‰∏∫<code>ID_IDList.OutPutType.Key</code>Âàô‰∏∫Á¨¨‰∏Ä‰Ωç.</li></ul><p>Ê≠§Â§ñËøòÊúâ:</p><blockquote><p>Mapping: Âú®Êï∞ÊçÆÂ∫ì‰∏≠ÂåπÈÖçÂæóÂà∞ËæìÂÖ•ÂÆû‰ΩìÂíåÂØπÂ∫îÁöÑËæìÂá∫ÂÆû‰Ωì<br>MappingUnionStatistics: Êü•ÊâæÊâÄÊúâÂÖ≥Á≥ªÁöÑÂπ∂ÈõÜÂπ∂‰ΩøÁî®Â≠óÂÖ∏ÁªüËÆ°ÊØè‰∏Ä‰∏™ËæìÂá∫ÂÆû‰Ωì‰∏éËæìÂÖ•ÂÆû‰ΩìÁöÑÊâÄÊúâÂÖ≥Á≥ª<br>MappingSelectUnionStatistics: Êü•ÊâæÊâÄÊúâÂÖ≥Á≥ªÁöÑÂπ∂ÈõÜÂπ∂‰ΩøÁî®Â≠óÂÖ∏ÁªüËÆ°ÊØè‰∏Ä‰∏™ËæìÂá∫ÂÆû‰Ωì‰∏éËæìÂÖ•ÂÆû‰ΩìÁöÑÊâÄÊúâÂÖ≥Á≥ª,Ê†πÊçÆËæìÂÖ•Êù°‰ª∂Á≠õÈÄâÁ¨¶ÂêàÊù°‰ª∂ÁöÑÂÖ≥Á≥ª</p></blockquote><hr><p><br></p><h2>2. Kamanri.WebSockets</h2><p><br></p><h3>2.1 ÁÆÄ‰ªã</h3><p>Â¶ÇÂâçÊñáÊâÄËø∞ÔºåËøôÊòØ‰∏Ä‰∏™<strong>‰∫ã‰ª∂È©±Âä®ÂûãÁΩëÁªúÂ•óÊé•Â≠ó(WebSocket)Ê°ÜÊû∂</strong>.<br>Êú¨Ê°ÜÊû∂Âü∫‰∫é<code>ASP .net Core</code>.<br>Êú¨Ê°ÜÊû∂ÂÆûÁé∞Ê†ëÁä∂ÁªìÊûÑÁöÑC/SÊãìÊâëÔºåÂèØ‰Ωú‰∏∫ÂÆ¢Êà∑Á´ØÂêë‰∏Ä‰∏™ÊúçÂä°Á´ØÂèëÂá∫ËØ∑Ê±ÇÔºå‰πüÂèØ‰ª•‰Ωú‰∏∫ÊúçÂä°Á´ØÊé•ÂèóÂ§öÂè∞Êù•Ëá™ÂÆ¢Êà∑Á´ØÁöÑËØ∑Ê±Ç, ‰∏Ä‰∏™ÊúçÂä°Á®ãÂ∫èÂèØÂçïÁã¨‰Ωú‰∏∫ÂÆ¢Êà∑Á´ØÊàñÊúçÂä°Á´Ø‰ΩøÁî®Ôºå‰πüÂèØÂêåÊó∂‰Ωú‰∏∫ÂÆ¢Êà∑Á´ØÊàñÊúçÂä°Á´Ø‰ΩøÁî®.<br>Êú¨Ê°ÜÊû∂Âü∫‰∫é‰∫ã‰ª∂Â§ÑÁêÜÊú∫Âà∂ÁöÑÊÄùÊÉ≥ÔºåÈááÁî®ÊñπÊ≥ïÁöÑË°®È©±Âä®ÊñπÂºèÔºåÂÆûÁé∞‰∫Ü‰∏Ä‰∏™Á±ª‰ºº‰∫éÊéßÂà∂Âô®ÁöÑÂ§ÑÁêÜÂ±ÇÔºå‰ΩøÂæóÁî®Êà∑ÂèØ‰ª•ÂÉèÁºñÂÜôÊéßÂà∂Âô®‰∏ÄÊ†∑Ôºå‰∏∫Ë¢´Ë∑ØÁî±Âà∞Êüê‰∏™ÁâπÂÆö‰∫ã‰ª∂ÁöÑÊ∂àÊÅØÁºñÂÜôÁõ∏Â∫îÁöÑ‰∫ã‰ª∂Â§ÑÁêÜÁ®ãÂ∫è.<br>Êú¨Ê°ÜÊû∂ÁõÆÂâçÂ∑≤Êèê‰æõwebÁ´ØÁöÑjsÂÆûÁé∞‰ª•ÂèäÂÆâÂçìÁ´ØÁöÑkotlinÂÆûÁé∞.</p><p><br></p><h3>2.2 ‰ΩøÁî®ÊñπÊ≥ï</h3><ol><li>Ê∑ªÂä†<code>OnMessageMessage</code>Ëá™ÂÆö‰πâÁöÑ‰∫ã‰ª∂Â§ÑÁêÜÁ±ªÂíå<code>OnMessageMiddleware</code>Ëá™ÂÆö‰πâÁöÑ‰∫ã‰ª∂Â§ÑÁêÜÁ±ª‰∏≠Èó¥‰ª∂Á±ª.</li></ol><p><br></p><pre>    public class OnMessageService\n    {\n\n    }\n\n    public class OnMessageMiddleware\n	{\n		public RequestDelegate _next;\n		//ÂêØÂä®OnMessageServiceÊúçÂä°\n		public OnMessageService OnMessageService { get; set; }\n		public OnMessageMiddleware(RequestDelegate next, OnMessageService onMsService)\n		{\n			_next = next;\n			OnMessageService = onMsService;\n		}\n\n		public async Task Invoke(HttpContext httpContext)\n		{\n			await _next.Invoke(httpContext);\n		}\n	}\n</pre><ol><li>Âú®<code>ASP .net Core</code>È°πÁõÆ‰∏≠ÁöÑ<code>Startup.cs</code>ÂºïÂÖ•Ê°ÜÊû∂ÁöÑÊúçÂä°:</li></ol><p>Startup.cs</p><p><br></p><pre>using XXX;\n\nnamespace XXX\n{\n	public class Startup\n	{\n		\n		public void ConfigureServices(IServiceCollection services)\n		{\n            ...\n            services.AddControllers();\n			// Ê∑ªÂä†ÊúçÂä°\n			services.AddKamanriWebSocket().AddSingleton&lt;OnMessageService&gt;();\n\n            ...\n\n		}\n\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n		{\n			if (env.IsDevelopment())\n			{\n				app.UseDeveloperExceptionPage();\n			}\n\n			app.UseRouting();\n            // Ê∑ªÂä†‰∏≠Èó¥‰ª∂\n			app.UseKamanriWebSocket();\n\n			app.UseMiddleware&lt;OnMessageMiddleware&gt;();\n\n			app.UseEndpoints(endpoints =&gt;\n			{\n				endpoints.MapControllers();\n			});\n		}\n	}\n}\n\n</pre><ol><li>Â¶ÇÊûúËØ•È°πÁõÆÈúÄË¶Å‰Ωú‰∏∫ÂÆ¢Êà∑Á´Ø, ÂàôÂú®<code>appsettings.json</code>Ê∑ªÂä†:</li></ol><p><br></p><pre>{\n  ...\n\n  \"WebSocket\" : {\n	\"URL\" : ${Server URL}\n  }\n\n  ...\n}\n</pre><p>Âê¶Âàô, ÂøΩÁï•Ëøô‰∏ÄÊ≠•.</p><ol><li>Â¶ÇÊûúËØ•È°πÁõÆË¶Å‰Ωú‰∏∫ÊúçÂä°Á´Ø, ÂàôÂàõÂª∫‰∏Ä‰∏™ÊéßÂà∂Âô®‰Ωú‰∏∫WebSocketÁöÑÊ≥®ÂÖ•ÁÇπ:</li></ol><p>IndexController.cs</p><p><br></p><pre>    public class IndexController : ControllerBase\n	{\n		IWebSocketSession _wsSession;\n\n		public IndexController(IWebSocketSession wsSession)\n		{\n			_wsSession = wsSession;\n		}\n\n		[HttpGet]\n		[Route(\"/\")]\n		public async Task Indexer()\n		{\n\n			if (HttpContext.WebSockets.IsWebSocketRequest)\n			{\n				var webSocket = await HttpContext.WebSockets.AcceptWebSocketAsync();\n				//Ê≥®ÂÜåWebSocket\n				await _wsSession.AcceptWebSocketInjection(webSocket);\n			}\n\n\n		}\n\n\n	}\n</pre><p>Âê¶Âàô, ÂøΩÁï•Ëøô‰∏ÄÊ≠•.</p><ol><li>Âú®<code>OnMessageService</code>‰∏≠ÁºñÂÜô‰∫ã‰ª∂Â§ÑÁêÜÁ®ãÂ∫è:</li></ol><p><br></p><pre>public class OnMessageService\n{\n    private readonly IWebSocketMessageService _wsmService;\n    public OnMessageService(IWebSocketMessageService wsmService)\n    {\n        _wsmService = wsmService;\n        _wsmService.AddEventHandler(WebSocketMessageEvent.OnConnect, OnConnect)\n            .AddEventHandler(WebSocketMessageEvent.OnDisconnect, OnDisconnect);;\n        ...\n    }\n\n    public Task&lt;IList&lt;WebSocketMessage&gt;&gt; OnConnect(IWebSocketSession session, IList&lt;WebSocketMessage&gt; messages)\n    {\n        ...\n    }\n\n    public Task&lt;IList&lt;WebSocketMessage&gt;&gt; OnDisconnect(IWebSocketSession session, IList&lt;WebSocketMessage&gt; messages)\n    {\n        ...\n    }\n    ...\n}\n</pre><ul><li><code>IWebSocketMessageService.AddEventHandler</code>ÊñπÊ≥ïÂ∞ÜÂØπÂ∫îÁöÑÊ∂àÊÅØË∑ØÁî±Âà∞ÂØπÂ∫îÁöÑ‰∫ã‰ª∂Â§ÑÁêÜÁ®ãÂ∫è, Âπ∂Â∞Ü‰∫ã‰ª∂Â§ÑÁêÜÁ®ãÂ∫èÁöÑËøîÂõûÂÄº‰Ωú‰∏∫Ê∂àÊÅØËøîÂõûÁªôÂèëÈÄÅÊ∂àÊÅØÊñπ.</li><li>‰πüÂèØ‰ª•Âà©Áî®<code>IWebSocketSession</code>ÂçïÁã¨ÂèëÈÄÅÊ∂àÊÅØ.</li></ul><hr><p><br></p><h2>3. Kamanri.Http</h2><p>...</p><p><br></p><h2>4. Kamanri.Self</h2><p>...</p>');
/*!40000 ALTER TABLE `postsinfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tags`
--

DROP TABLE IF EXISTS `tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tags` (
  `ID` bigint NOT NULL AUTO_INCREMENT,
  `tag` char(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `tagID` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tags`
--

LOCK TABLES `tags` WRITE;
/*!40000 ALTER TABLE `tags` DISABLE KEYS */;
INSERT INTO `tags` VALUES (-1,'ÈªòËÆ§Ê†áÁ≠æ'),(1,'Á¨¨‰∏Ä‰∏™Ê†áÁ≠æ'),(2,'ËÆ°ÁÆóÊú∫'),(3,'ËÄÉÁ†î'),(4,'Âì≤Â≠¶'),(5,'ËÆ°ÁÆóÊú∫ÁßëÂ≠¶ÊäÄÊúØ'),(6,'ÁΩëÁªúÂ∑•Á®ã'),(7,'ËΩØ‰ª∂Â∑•Á®ã'),(9,'ÁîµË∑ØÂéüÁêÜ'),(10,'Ê®°ÊãüÁîµÂ≠êÊäÄÊúØ'),(11,'‰∫∫Â∑•Êô∫ËÉΩ'),(12,'ÁΩëÁªúÁÆ°ÁêÜ‰∏éÁª¥Êä§'),(13,'Ê±áÁºñËØ≠Ë®Ä'),(14,'Ë∑ØÁî±‰∏é‰∫§Êç¢ÊäÄÊúØ'),(15,'ÈúÄÊ±ÇÂàÜÊûê‰∏éÁ≥ªÁªüËÆæËÆ°'),(16,'Êï∞ÊçÆÂ∫ì'),(17,'Á®ãÂ∫èËÆæËÆ°ËØ≠Ë®Ä'),(18,'ÁîµË∑ØÂéüÁêÜÂõæ'),(19,'Âä®ÊÄÅÁîµË∑Ø'),(20,'‰∏âÊûÅÁÆ°'),(21,'ÂçäÂØº‰Ωì'),(22,'Âú∫ÊïàÂ∫î'),(23,'Â§ßÊï∞ÊçÆ'),(24,'Ê∑±Â∫¶Â≠¶‰π†'),(25,'VLANÈó¥Ë∑ØÁî±'),(26,'ÁîüÊàêÊ†ëÂçèËÆÆ'),(27,'Á´ØÂè£ËÅöÂêà'),(28,'Â≠òÂÇ®Âô®Á≥ªÁªü'),(29,'‰∏≠Êñ≠Á≥ªÁªü'),(30,'ÈúÄÊ±ÇÊñáÊ°£'),(31,'Êï∞ÊçÆÊµÅÂõæ'),(32,'Áî®‰æãÂõæ'),(33,'SQL server'),(34,'Oracle'),(35,'Java'),(36,'C++'),(37,'Python'),(38,'LinuxÂëΩ‰ª§'),(39,'Á∫øÊÄß‰ª£Êï∞'),(40,'Ê¶ÇÁéáËÆ∫'),(41,'Áî®‰æã'),(42,'ÂèÇ‰∏éËÄÖ'),(43,'E-RÂõæ'),(44,'SQLËØ≠Âè•'),(45,'Êï∞ÊçÆÂ∫ìËÆæËÆ°'),(47,'C#'),(48,'.NET Core');
/*!40000 ALTER TABLE `tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tags_tags`
--

DROP TABLE IF EXISTS `tags_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tags_tags` (
  `tags_1` bigint NOT NULL,
  `tags_2` bigint NOT NULL,
  `relations` varchar(255) NOT NULL,
  PRIMARY KEY (`tags_1`,`tags_2`),
  KEY `FK_TAGS_2` (`tags_2`),
  CONSTRAINT `FK_TAGS_1` FOREIGN KEY (`tags_1`) REFERENCES `tags` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_TAGS_2` FOREIGN KEY (`tags_2`) REFERENCES `tags` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tags_tags`
--

LOCK TABLES `tags_tags` WRITE;
/*!40000 ALTER TABLE `tags_tags` DISABLE KEYS */;
INSERT INTO `tags_tags` VALUES (1,-1,''),(2,-1,''),(3,-1,''),(4,-1,''),(5,2,''),(6,2,''),(7,2,''),(9,5,''),(10,5,''),(11,5,''),(12,6,''),(13,5,''),(14,6,''),(15,7,''),(16,7,''),(17,7,''),(18,9,''),(19,9,''),(20,10,''),(21,10,''),(22,10,''),(23,11,''),(24,11,''),(25,12,''),(26,12,''),(27,12,''),(28,13,''),(29,13,''),(30,15,''),(31,15,''),(32,15,''),(33,16,''),(34,16,''),(35,17,''),(36,17,''),(37,17,'{\"relation\":1}'),(38,23,''),(39,24,''),(40,24,''),(41,32,''),(42,32,''),(43,45,''),(44,16,''),(45,16,''),(47,17,''),(48,47,'');
/*!40000 ALTER TABLE `tags_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `ID` bigint NOT NULL AUTO_INCREMENT,
  `Password` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `Account` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `userID` (`ID`),
  UNIQUE KEY `Account_Unique` (`Account`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (3,'456789','2168359585@qq.com'),(4,'262425','2624250238@qq.com'),(5,'123456789','853909407@qq.com'),(8,'123456','974481066@qq.com'),(9,'123456','1014958042@qq.com'),(14,'654321','qq.974481066.qq@gmail.com'),(15,'123456','2240090802@qq.com');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users_comments`
--

DROP TABLE IF EXISTS `users_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users_comments` (
  `users` bigint NOT NULL,
  `comments` bigint NOT NULL,
  `relations` varchar(255) NOT NULL,
  PRIMARY KEY (`users`,`comments`),
  KEY `FK_COMMENTS` (`comments`),
  CONSTRAINT `FK_COMMENTS` FOREIGN KEY (`comments`) REFERENCES `comments` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_USERS` FOREIGN KEY (`users`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users_comments`
--

LOCK TABLES `users_comments` WRITE;
/*!40000 ALTER TABLE `users_comments` DISABLE KEYS */;
INSERT INTO `users_comments` VALUES (3,65,'{\"Type\":[\"Owned\"]}'),(3,74,'{\"Type\":[\"Owned\"]}'),(3,77,'{\"Type\":[\"Owned\"]}'),(3,78,'{\"Type\":[\"Owned\"]}'),(8,59,'{\"Type\":[\"Owned\"]}'),(8,60,'{\"Type\":[\"Owned\"]}'),(8,61,'{\"Type\":[\"Owned\"]}'),(8,62,'{\"Type\":[\"Owned\"]}'),(8,63,'{\"Type\":[\"Owned\"]}'),(8,64,'{\"Type\":[\"Owned\"]}'),(8,66,'{\"Type\":[\"Owned\"]}'),(8,67,'{\"Type\":[\"Owned\"]}'),(8,68,'{\"Type\":[\"Owned\"]}'),(8,69,'{\"Type\":[\"Owned\"]}'),(8,70,'{\"Type\":[\"Owned\"]}'),(8,71,'{\"Type\":[\"Owned\"]}'),(8,72,'{\"Type\":[\"Owned\"]}'),(8,73,'{\"Type\":[\"Owned\"]}'),(8,75,'{\"Type\":[\"Owned\"]}'),(8,76,'{\"Type\":[\"Owned\"]}'),(8,79,'{\"Type\":[\"Owned\"]}'),(8,80,'{\"Type\":[\"Owned\"]}'),(8,81,'{\"Type\":[\"Owned\"]}');
/*!40000 ALTER TABLE `users_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users_posts`
--

DROP TABLE IF EXISTS `users_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users_posts` (
  `users` bigint NOT NULL,
  `posts` bigint NOT NULL,
  `relations` varchar(255) NOT NULL,
  PRIMARY KEY (`users`,`posts`),
  KEY `UP_FK_P` (`posts`),
  KEY `UP_FK_U` (`users`),
  CONSTRAINT `users_posts_ibfk_1` FOREIGN KEY (`posts`) REFERENCES `posts` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `users_posts_ibfk_2` FOREIGN KEY (`users`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users_posts`
--

LOCK TABLES `users_posts` WRITE;
/*!40000 ALTER TABLE `users_posts` DISABLE KEYS */;
INSERT INTO `users_posts` VALUES (3,6,'{\"Type\":[\"Like\",\"Collect\"]}'),(3,16,'{\"Type\":[\"Collect\",\"Like\"]}'),(3,23,'{\"Type\":[\"Owned\"]}'),(3,24,'{\"Type\":[\"Owned\"]}'),(3,29,'{\"Type\":[\"Owned\"]}'),(3,30,'{\"Type\":[\"Owned\"]}'),(3,31,'{\"Type\":[\"Owned\"]}'),(3,33,'{\"Type\":[\"Owned\",\"Like\"]}'),(4,34,'{\"Type\":[\"Owned\"]}'),(5,32,'{\"Type\":[\"Owned\"]}'),(5,35,'{\"Type\":[\"Owned\"]}'),(8,6,'{\"Type\":[\"Owned\"]}'),(8,16,'{\"Type\":[\"Owned\"]}'),(8,17,'{\"Type\":[\"Owned\"]}'),(8,18,'{\"Type\":[\"Owned\"]}'),(8,19,'{\"Type\":[\"Owned\"]}'),(8,20,'{\"Type\":[\"Owned\"]}'),(8,29,'{\"Type\":[\"Like\"]}'),(8,37,'{\"Type\":[\"Owned\"]}'),(15,36,'{\"Type\":[\"Owned\"]}');
/*!40000 ALTER TABLE `users_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users_tags`
--

DROP TABLE IF EXISTS `users_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users_tags` (
  `users` bigint NOT NULL,
  `tags` bigint NOT NULL,
  `relations` varchar(255) NOT NULL,
  PRIMARY KEY (`users`,`tags`),
  KEY `UT_FK_T` (`tags`),
  KEY `UT_FK_U` (`users`),
  CONSTRAINT `users_tags_ibfk_1` FOREIGN KEY (`tags`) REFERENCES `tags` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `users_tags_ibfk_2` FOREIGN KEY (`users`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users_tags`
--

LOCK TABLES `users_tags` WRITE;
/*!40000 ALTER TABLE `users_tags` DISABLE KEYS */;
INSERT INTO `users_tags` VALUES (3,2,'{\"Type\":[\"Self\",\"Interested\"]}'),(3,4,'{\"Type\":[\"Interested\"]}'),(3,6,'{\"Type\":[\"Self\"]}'),(3,16,'{\"Type\":[\"Interested\"]}'),(3,28,'{\"Type\":[\"Interested\"]}'),(5,1,'{\"Type\":[\"Self\"]}'),(5,3,'{\"Type\":[\"Interested\"]}'),(5,5,'{\"Type\":[\"Interested\"]}'),(5,7,'{\"Type\":[\"Self\"]}'),(8,2,'{\"Type\":[\"Self\",\"Interested\"]}'),(8,4,'{\"Type\":[\"Interested\"]}'),(8,5,'{\"Type\":[\"Self\",\"Interested\"]}'),(8,7,'{\"Type\":[\"Interested\"]}'),(8,10,'{\"Type\":[\"Interested\"]}'),(8,13,'{\"Type\":[\"Interested\"]}'),(8,15,'{\"Type\":[\"Self\"]}'),(8,17,'{\"Type\":[\"Self\"]}'),(8,47,'{\"Type\":[\"Self\"]}');
/*!40000 ALTER TABLE `users_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users_users`
--

DROP TABLE IF EXISTS `users_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users_users` (
  `users_1` bigint NOT NULL,
  `users_2` bigint NOT NULL,
  `relations` varchar(255) NOT NULL,
  PRIMARY KEY (`users_1`,`users_2`),
  KEY `users_2` (`users_2`),
  CONSTRAINT `users_users_ibfk_1` FOREIGN KEY (`users_1`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `users_users_ibfk_2` FOREIGN KEY (`users_2`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users_users`
--

LOCK TABLES `users_users` WRITE;
/*!40000 ALTER TABLE `users_users` DISABLE KEYS */;
INSERT INTO `users_users` VALUES (3,3,'{\"Type\":[\"Focus\"]}'),(3,5,'{\"Type\":[\"Focus\"]}'),(3,8,'{\"Type\":[\"Focus\"]}'),(3,15,'{\"Type\":[\"Focus\"]}'),(4,3,'{\"Type\":[\"Focus\"]}'),(4,4,'{\"Type\":[\"Focus\"]}'),(4,8,'{\"Type\":[\"Focus\"]}'),(5,3,'{\"Type\":[\"Focus\"]}'),(5,4,'{\"Type\":[\"Focus\"]}'),(5,5,'{\"Type\":[\"Focus\"]}'),(5,8,'{\"Type\":[\"Focus\"]}'),(8,3,'{\"Type\":[\"Focus\"]}'),(8,4,'{\"Type\":[\"Focus\"]}'),(8,5,'{\"Type\":[\"Focus\"]}'),(8,8,'{\"Type\":[\"Focus\"]}'),(8,9,'{\"Type\":[\"Focus\"]}'),(8,15,'{\"Type\":[\"Focus\"]}'),(9,3,'{\"Type\":[\"Focus\"]}'),(9,4,'{\"Type\":[\"Focus\"]}'),(9,5,'{\"Type\":[\"Focus\"]}'),(9,8,'{\"Type\":[\"Focus\"]}'),(15,3,'{\"Type\":[\"Focus\"]}'),(15,4,'{\"Type\":[\"Focus\"]}'),(15,5,'{\"Type\":[\"Focus\"]}'),(15,8,'{\"Type\":[\"Focus\"]}');
/*!40000 ALTER TABLE `users_users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `usersinfo`
--

DROP TABLE IF EXISTS `usersinfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `usersinfo` (
  `ID` bigint NOT NULL,
  `NickName` varchar(255) NOT NULL,
  `RealName` varchar(255) NOT NULL,
  `University` varchar(255) NOT NULL,
  `School` varchar(255) NOT NULL,
  `Speciality` varchar(255) NOT NULL,
  `SchoolYear` varchar(255) NOT NULL,
  `Introduction` varchar(4095) NOT NULL,
  `HeadImage` varchar(1023) NOT NULL,
  KEY `ID` (`ID`),
  CONSTRAINT `usersinfo_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `users` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `usersinfo`
--

LOCK TABLES `usersinfo` WRITE;
/*!40000 ALTER TABLE `usersinfo` DISABLE KEYS */;
INSERT INTO `usersinfo` VALUES (8,'kamanri','hwl','ÂõõÂ∑ùÂ∏àËåÉÂ§ßÂ≠¶','ËÆ°ÁÆóÊú∫ÁßëÂ≠¶Â≠¶Èô¢','ËÆ°ÁÆóÊú∫ÁßëÂ≠¶‰∏éÊäÄÊúØ','2019/1/1 0:00:00','ÊöÇÊó∂Ê≤°ÊúâÊÉ≥Â•Ω','/StaticFiles/Images/HeadImage/20210714185547.jpg'),(9,'Â∏¶ÊÑü','cxl','ÂõõÂ∑ùÂ∏àËåÉÂ§ßÂ≠¶','ËÆ°ÁÆóÊú∫ÁßëÂ≠¶Â≠¶Èô¢','ËÆ°ÁÆóÊú∫ÁßëÂ≠¶‰∏éÊäÄÊúØ','2019/1/1 0:00:00','ÂñùÂ•∂Ëå∂','/StaticFiles/Images/HeadImage/syt5.com.1638601045.jpg'),(3,'ÂÖÑË¥µ','ÂÖÑË¥µ','Sichuan Normal University','Computer Science Academy','Computer Science & Technology','2019/1/1 0:00:00','Clone','/StaticFiles/Images/HeadImage/syt5.com.1638601084.jpg'),(4,'‰∫ÜÊó†Áóï','fmy','Sichuan Normal University','Computer Science Academy','Computer Science & Technology','2019/1/1 0:00:00','','/StaticFiles/Images/HeadImage/syt5.com.1638601120.jpg'),(5,'853909407','853909407','Sichuan Normal University','Computer Science Academy','Computer Science & Technology','2019/1/1 0:00:00','','/StaticFiles/Images/HeadImage/syt5.com.1638601145.jpg'),(14,'‚Ö§ali','hewanli','ÂõõÂ∑ùÂ∏àËåÉÂ§ßÂ≠¶','ËÆ°ÁÆóÊú∫ÁßëÂ≠¶Â≠¶Èô¢','ËÆ°ÁÆóÊú∫ÁßëÂ≠¶‰∏éÊäÄÊúØ','2019/1/1 0:00:00','ÁâõÈÄº','/StaticFiles/Images/HeadImage/syt5.com.1638601165.jpg'),(15,'Lucas','ly','Sichuan Normal University','Computer Science Academy','Computer Science & Technology','2019/1/1 0:00:00','','/StaticFiles/Images/HeadImage/21E71DB5133C5A2C5257FFA8FDC510BB.jpg');
/*!40000 ALTER TABLE `usersinfo` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-04-04 21:11:34
